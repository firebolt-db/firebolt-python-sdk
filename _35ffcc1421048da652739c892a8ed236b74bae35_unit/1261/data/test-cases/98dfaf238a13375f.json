{"uid":"98dfaf238a13375f","name":"test_split_struct_fields[a int, b array(struct(a int))-expected2]","fullName":"tests.unit.common.test_typing_parse#test_split_struct_fields","historyId":"a0621a499fbb433de7a589e20b844d16","time":{"start":1734613616444,"stop":1734613616445,"duration":1},"status":"failed","statusMessage":"AssertionError: Error splitting struct fields: provided a int, b array(struct(a int)), expected ['a int', ' b array(struct(a int))']\nassert ['a int', 'b ...ruct(a int))'] == ['a int', ' b...ruct(a int))']\n  At index 1 diff: 'b array(struct(a int))' != ' b array(struct(a int))'\n  Full diff:\n  - ['a int', ' b array(struct(a int))']\n  ?            -\n  + ['a int', 'b array(struct(a int))']","statusTrace":"value = 'a int, b array(struct(a int))'\nexpected = ['a int', ' b array(struct(a int))']\n\n    @mark.parametrize(\n        \"value,expected\",\n        [\n            (\"a int, b text\", [\"a int\", \" b text\"]),\n            (\"a int, s struct(a int, b text)\", [\"a int\", \" s struct(a int, b text)\"]),\n            (\"a int, b array(struct(a int))\", [\"a int\", \" b array(struct(a int))\"]),\n        ],\n    )\n    def test_split_struct_fields(value, expected) -> None:\n>       assert (\n            split_struct_fields(value) == expected\n        ), f\"Error splitting struct fields: provided {value}, expected {expected}\"\nE       AssertionError: Error splitting struct fields: provided a int, b array(struct(a int)), expected ['a int', ' b array(struct(a int))']\nE       assert ['a int', 'b ...ruct(a int))'] == ['a int', ' b...ruct(a int))']\nE         At index 1 diff: 'b array(struct(a int))' != ' b array(struct(a int))'\nE         Full diff:\nE         - ['a int', ' b array(struct(a int))']\nE         ?            -\nE         + ['a int', 'b array(struct(a int))']\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/common/test_typing_parse.py:379: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clear_cache","time":{"start":1734613616441,"stop":1734613616441,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1734613616441,"stop":1734613616443,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"global_fake_fs::0","time":{"start":1734613616456,"stop":1734613616457,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.common"},{"name":"suite","value":"test_typing_parse"},{"name":"host","value":"fv-az1782-288"},{"name":"thread","value":"2326-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.common.test_typing_parse"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected","value":"['a int', ' b array(struct(a int))']"},{"name":"value","value":"'a int, b array(struct(a int))'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"98dfaf238a13375f.json","parameterValues":["['a int', ' b array(struct(a int))']","'a int, b array(struct(a int))'"]}