{"uid":"b94ca4b83990d7a0","name":"test_split_struct_fields[a int, b text-expected0]","fullName":"tests.unit.common.test_typing_parse#test_split_struct_fields","historyId":"ec86c8ed973d1fd7f45991a72b133f10","time":{"start":1734613616398,"stop":1734613616400,"duration":2},"status":"failed","statusMessage":"AssertionError: Error splitting struct fields: provided a int, b text, expected ['a int', ' b text']\nassert ['a int', 'b text'] == ['a int', ' b text']\n  At index 1 diff: 'b text' != ' b text'\n  Full diff:\n  - ['a int', ' b text']\n  ?            -\n  + ['a int', 'b text']","statusTrace":"value = 'a int, b text', expected = ['a int', ' b text']\n\n    @mark.parametrize(\n        \"value,expected\",\n        [\n            (\"a int, b text\", [\"a int\", \" b text\"]),\n            (\"a int, s struct(a int, b text)\", [\"a int\", \" s struct(a int, b text)\"]),\n            (\"a int, b array(struct(a int))\", [\"a int\", \" b array(struct(a int))\"]),\n        ],\n    )\n    def test_split_struct_fields(value, expected) -> None:\n>       assert (\n            split_struct_fields(value) == expected\n        ), f\"Error splitting struct fields: provided {value}, expected {expected}\"\nE       AssertionError: Error splitting struct fields: provided a int, b text, expected ['a int', ' b text']\nE       assert ['a int', 'b text'] == ['a int', ' b text']\nE         At index 1 diff: 'b text' != ' b text'\nE         Full diff:\nE         - ['a int', ' b text']\nE         ?            -\nE         + ['a int', 'b text']\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/common/test_typing_parse.py:379: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"global_fake_fs","time":{"start":1734613616395,"stop":1734613616397,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1734613616395,"stop":1734613616395,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"global_fake_fs::0","time":{"start":1734613616419,"stop":1734613616420,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.common"},{"name":"suite","value":"test_typing_parse"},{"name":"host","value":"fv-az1782-288"},{"name":"thread","value":"2326-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.common.test_typing_parse"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected","value":"['a int', ' b text']"},{"name":"value","value":"'a int, b text'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b94ca4b83990d7a0.json","parameterValues":["['a int', ' b text']","'a int, b text'"]}