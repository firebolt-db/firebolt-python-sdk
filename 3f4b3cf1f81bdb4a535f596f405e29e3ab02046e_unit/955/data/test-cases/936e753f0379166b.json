{
  "uid" : "936e753f0379166b",
  "name" : "test_from_asyncio",
  "fullName" : "tests.unit.async_db.V1.test_connection#test_from_asyncio",
  "historyId" : "1511d6a7d4add62b8c84d884afda58fb",
  "time" : {
    "start" : 1700481011282,
    "stop" : 1700481011485,
    "duration" : 203
  },
  "status" : "broken",
  "statusMessage" : "RuntimeError: must be called from async context",
  "statusTrace" : "httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f44ac3caa90>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f44ac14cef0>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nquery_callback = <function query_callback.<locals>.do_query at 0x7f44ac134f80>\nquery_url = URL('https://api-dev.mock.firebolt.io/?output_format=JSON_Compact&database=database')\nserver = 'api-dev.mock.firebolt.io', db_name = 'database'\n\n    @mark.skipif(\n        sys.platform == \"darwin\",\n        reason=\"Fails locally, need to verify\",\n    )\n    def test_from_asyncio(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        query_callback: Callable,\n        query_url: str,\n        server: str,\n        db_name: str,\n    ):\n        async def async_flow() -> None:\n            async with (\n                await connect(\n                    engine_url=server,\n                    database=db_name,\n                    auth=UsernamePassword(\n                        \"u\",\n                        \"p\",\n                    ),\n                    api_endpoint=server,\n                )\n            ) as connection:\n                cursor = connection.cursor()\n                await cursor.execute(\"SELECT 1\")\n                await cursor.fetchone()\n                await cursor.fetchmany(1)\n                await cursor.fetchall()\n    \n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        httpx_mock.add_callback(query_callback, url=query_url)\n>       run(async_flow())\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/async_db/V1/test_connection.py:478: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/asyncio/runners.py:43: in run\n    return loop.run_until_complete(main)\n/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/asyncio/base_events.py:587: in run_until_complete\n    return future.result()\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/async_db/V1/test_connection.py:471: in async_flow\n    await cursor.execute(\"SELECT 1\")\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/async_db/cursor.py:255: in execute\n    await self._do_execute(query, params_list, skip_parsing, async_execution)\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/async_db/cursor.py:201: in _do_execute\n    query, {\"output_format\": JSON_OUTPUT_FORMAT}\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/async_db/cursor.py:555: in _api_request\n    content=query,\n/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/site-packages/httpx/_client.py:1530: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/site-packages/httpx/_client.py:1621: in send\n    history=[],\n/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/site-packages/httpx/_client.py:1642: in _send_handling_auth\n    request = await auth_flow.__anext__()\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/auth/base.py:139: in async_auth_flow\n    async with self._lock:\n/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/site-packages/trio/_sync.py:93: in __aenter__\n    await self.acquire()\n/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/site-packages/trio/_sync.py:524: in acquire\n    await trio.lowlevel.checkpoint_if_cancelled()\n/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/site-packages/trio/_core/_run.py:2529: in checkpoint_if_cancelled\n    task = current_task()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def current_task():\n        \"\"\"Return the :class:`Task` object representing the current task.\n    \n        Returns:\n          Task: the :class:`Task` that called :func:`current_task`.\n    \n        \"\"\"\n    \n        try:\n            return GLOBAL_RUN_CONTEXT.task\n        except AttributeError:\n>           raise RuntimeError(\"must be called from async context\") from None\nE           RuntimeError: must be called from async context\n\n/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/site-packages/trio/_core/_run.py:2457: RuntimeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "server",
    "time" : {
      "start" : 1700481011280,
      "stop" : 1700481011280,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "db_name",
    "time" : {
      "start" : 1700481011281,
      "stop" : 1700481011281,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "monkeypatch",
    "time" : {
      "start" : 1700481011280,
      "stop" : 1700481011280,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_url",
    "time" : {
      "start" : 1700481014921,
      "stop" : 1700481014921,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "httpx_mock",
    "time" : {
      "start" : 1700481011280,
      "stop" : 1700481011280,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_callback",
    "time" : {
      "start" : 1700481011281,
      "stop" : 1700481011281,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_url",
    "time" : {
      "start" : 1700481011281,
      "stop" : 1700481011282,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_description",
    "time" : {
      "start" : 1700481011281,
      "stop" : 1700481011281,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_data",
    "time" : {
      "start" : 1700481011281,
      "stop" : 1700481011281,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "global_fake_fs",
    "time" : {
      "start" : 1700481011277,
      "stop" : 1700481011279,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_url",
    "time" : {
      "start" : 1700481026664,
      "stop" : 1700481026665,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_data",
    "time" : {
      "start" : 1700481026664,
      "stop" : 1700481026664,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_description",
    "time" : {
      "start" : 1700481026664,
      "stop" : 1700481026664,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "assert_all_responses_were_requested",
    "time" : {
      "start" : 1700481011280,
      "stop" : 1700481011280,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_callback",
    "time" : {
      "start" : 1700481026664,
      "stop" : 1700481026664,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_url",
    "time" : {
      "start" : 1700481011280,
      "stop" : 1700481011280,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_statistics",
    "time" : {
      "start" : 1700481026664,
      "stop" : 1700481026664,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_statistics",
    "time" : {
      "start" : 1700481011281,
      "stop" : 1700481011281,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_callback",
    "time" : {
      "start" : 1700481011280,
      "stop" : 1700481011281,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "non_mocked_hosts",
    "time" : {
      "start" : 1700481011280,
      "stop" : 1700481011280,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "monkeypatch::0",
    "time" : {
      "start" : 1700481011665,
      "stop" : 1700481011665,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "httpx_mock::0",
    "time" : {
      "start" : 1700481011663,
      "stop" : 1700481011663,
      "duration" : 0
    },
    "status" : "failed",
    "statusMessage" : "AssertionError: The following responses are mocked but not requested:\n  Match all requests on https://api-dev.mock.firebolt.io/auth/v1/login\n  Match all requests on https://api-dev.mock.firebolt.io/?output_format=JSON_Compact&database=database\nassert not [<pytest_httpx._httpx_mock._RequestMatcher object at 0x7f44ac175590>, <pytest_httpx._httpx_mock._RequestMatcher object at 0x7f44ac1e09d0>]\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/site-packages/_pytest/fixtures.py\", line 916, in _teardown_yield_fixture\n    next(it)\n  File \"/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/site-packages/pytest_httpx/__init__.py\", line 65, in httpx_mock\n    mock.reset(assert_all_responses_were_requested)\n  File \"/opt/hostedtoolcache/Python/3.7.17/x64/lib/python3.7/site-packages/pytest_httpx/_httpx_mock.py\", line 309, in reset\n    assert (\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "global_fake_fs::0",
    "time" : {
      "start" : 1700481011665,
      "stop" : 1700481011665,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.skipif(False, reason='Fails locally, need to verify')"
  }, {
    "name" : "parentSuite",
    "value" : "tests.unit.async_db.V1"
  }, {
    "name" : "suite",
    "value" : "test_connection"
  }, {
    "name" : "host",
    "value" : "fv-az661-425"
  }, {
    "name" : "thread",
    "value" : "2377-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.unit.async_db.V1.test_connection"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.skipif(False, reason='Fails locally, need to verify')" ]
  },
  "source" : "936e753f0379166b.json",
  "parameterValues" : [ ]
}