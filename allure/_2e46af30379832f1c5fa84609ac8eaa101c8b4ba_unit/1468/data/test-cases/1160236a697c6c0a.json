{"uid":"1160236a697c6c0a","name":"test_cursor_execute_error","fullName":"tests.unit.db.test_cursor#test_cursor_execute_error","historyId":"867eca546491a95b83305e14679422df","time":{"start":1759509276152,"stop":1759509276161,"duration":9},"description":"Cursor handles all types of errors properly.","descriptionHtml":"<p>Cursor handles all types of errors properly.</p>\n","status":"broken","statusMessage":"TypeError: reset() takes 1 positional argument but 2 were given","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7ff3d30a3fa0>\nenv_name = 'api_dev', db_name = 'database'\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\nquery_statistics = {'bytes_read': 61, 'elapsed': 0.116907717, 'rows_read': 1, 'scanned_bytes_cache': 0, ...}\ncursor = <firebolt.db.cursor.CursorV2 object at 0x7ff3d2e628b0>\nsystem_engine_query_url = 'https://bravo.a.eu-west-1.aws.mock.firebolt.io/?output_format=JSON_Compact&database=database'\n\n    def test_cursor_execute_error(\n        httpx_mock: HTTPXMock,\n        env_name,\n        db_name: str,\n        query_url: str,\n        query_statistics: Dict[str, Any],\n        cursor: Cursor,\n        system_engine_query_url: str,\n    ):\n        \"\"\"Cursor handles all types of errors properly.\"\"\"\n        for query, message in (\n            (\n                lambda: cursor.execute(\"select * from t\"),\n                \"server-side synchronous execute()\",\n            ),\n            (\n                lambda: cursor.executemany(\"select * from t\", []),\n                \"server-side synchronous executemany()\",\n            ),\n        ):\n            # Internal httpx error\n            def http_error(*args, **kwargs):\n                raise StreamError(\"httpx error\")\n    \n            httpx_mock.add_callback(http_error, url=query_url)\n            with raises(StreamError) as excinfo:\n                query()\n    \n            assert cursor._state == CursorState.ERROR\n            assert (\n                str(excinfo.value) == \"httpx error\"\n            ), f\"Invalid query error message for {message}.\"\n    \n            # HTTP error\n            httpx_mock.add_callback(\n                lambda *args, **kwargs: Response(\n                    status_code=codes.BAD_REQUEST,\n                ),\n                url=query_url,\n            )\n            with raises(HTTPStatusError) as excinfo:\n                query()\n    \n            errmsg = str(excinfo.value)\n            assert cursor._state == CursorState.ERROR\n            assert \"Bad Request\" in errmsg, f\"Invalid query error message for {message}.\"\n    \n            # Database query error\n            httpx_mock.add_callback(\n                lambda *args, **kwargs: Response(\n                    status_code=codes.INTERNAL_SERVER_ERROR,\n                    content=\"Query error message\",\n                ),\n                url=query_url,\n            )\n            with raises(OperationalError) as excinfo:\n                query()\n    \n            assert cursor._state == CursorState.ERROR\n            assert (\n                str(excinfo.value) == \"Error executing query:\\nQuery error message\"\n            ), f\"Invalid authentication error message for {message}.\"\n    \n            # Database exists but some other error\n            error_message = \"My query error message\"\n            httpx_mock.add_callback(\n                lambda *args, **kwargs: Response(\n                    status_code=codes.FORBIDDEN,\n                    content=error_message,\n                ),\n                url=query_url,\n                match_content=b\"select * from t\",\n            )\n            with raises(ProgrammingError) as excinfo:\n                query()\n            assert cursor._state == CursorState.ERROR\n            assert error_message in str(excinfo)\n    \n>           httpx_mock.reset(True)\nE           TypeError: reset() takes 1 positional argument but 2 were given\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/db/test_cursor.py:276: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"insert_assert_add_to_builtins","time":{"start":1759509230762,"stop":1759509230763,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session","time":{"start":1759509230763,"stop":1759509230763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759509230763,"stop":1759509230763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1759509276040,"stop":1759509276040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"disable_cache","time":{"start":1759509276040,"stop":1759509276040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail","time":{"start":1759509276040,"stop":1759509276040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1759509276041,"stop":1759509276043,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1759509276043,"stop":1759509276043,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"env_name","time":{"start":1759509276043,"stop":1759509276043,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"db_name","time":{"start":1759509276043,"stop":1759509276043,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1759509276043,"stop":1759509276043,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1759509276044,"stop":1759509276044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client_id","time":{"start":1759509276044,"stop":1759509276045,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_url","time":{"start":1759509276044,"stop":1759509276044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_name","time":{"start":1759509276044,"stop":1759509276044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_url","time":{"start":1759509276044,"stop":1759509276044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_statistics","time":{"start":1759509276044,"stop":1759509276044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth","time":{"start":1759509276045,"stop":1759509276066,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client_secret","time":{"start":1759509276045,"stop":1759509276045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1759509276066,"stop":1759509276066,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_system_engine_url","time":{"start":1759509276067,"stop":1759509276067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"access_token","time":{"start":1759509276067,"stop":1759509276067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_endpoint","time":{"start":1759509276067,"stop":1759509276067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1759509276067,"stop":1759509276067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"check_credentials_callback","time":{"start":1759509276067,"stop":1759509276067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"use_database_callback","time":{"start":1759509276068,"stop":1759509276068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"system_engine_no_db_query_url","time":{"start":1759509276068,"stop":1759509276069,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"use_engine_callback","time":{"start":1759509276068,"stop":1759509276068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_system_engine_callback","time":{"start":1759509276068,"stop":1759509276068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"mock_system_engine_connection_flow","time":{"start":1759509276068,"stop":1759509276068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"system_engine_url","time":{"start":1759509276068,"stop":1759509276068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"mock_connection_flow","time":{"start":1759509276069,"stop":1759509276069,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"system_engine_query_url","time":{"start":1759509276069,"stop":1759509276069,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connection","time":{"start":1759509276069,"stop":1759509276151,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cursor","time":{"start":1759509276151,"stop":1759509276152,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"connection::0","time":{"start":1759509276187,"stop":1759509276188,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock::0","time":{"start":1759509276197,"stop":1759509276197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch::0","time":{"start":1759509276198,"stop":1759509276199,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1759509276199,"stop":1759509276200,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail::0","time":{"start":1759509276201,"stop":1759509276201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session::0","time":{"start":1759509291345,"stop":1759509291345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.db"},{"name":"suite","value":"test_cursor"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2436-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.db.test_cursor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1160236a697c6c0a.json","parameterValues":[]}