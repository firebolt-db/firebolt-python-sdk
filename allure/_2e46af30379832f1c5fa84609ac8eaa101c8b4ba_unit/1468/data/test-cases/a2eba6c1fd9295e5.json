{"uid":"a2eba6c1fd9295e5","name":"test_database_get_many","fullName":"tests.unit.V1.service.test_database#test_database_get_many","historyId":"ba5ae15b9728c215fb231d31f73bea26","time":{"start":1759509243953,"stop":1759509243981,"duration":28},"status":"broken","statusMessage":"httpx.TimeoutException: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\n- Match GET request on re.compile('https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/databases?[a-zA-Z0-9=&]*')\n- Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\n- Already matched any request on https://api-dev.mock.firebolt.io/compute/v1/providers\n- Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\n- Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\n\nIf you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7ff3d30db820>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7ff3d63591f0>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nprovider_callback = <function provider_callback.<locals>.do_mock at 0x7ff3d63590d0>\nprovider_url = 'https://api-dev.mock.firebolt.io/compute/v1/providers'\nsettings = Settings(auth=<firebolt.client.auth.username_password.UsernamePassword object at 0x7ff3d643cd40>, account_name='mock_account_name', server='api-dev.mock.firebolt.io', default_region='mock_region_1')\naccount_id_callback = <function account_id_callback.<locals>.do_mock at 0x7ff3d6359d30>\naccount_id_url = re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\ndatabase_get_by_name_callback = <function database_get_by_name_callback.<locals>.do_mock at 0x7ff3d63598b0>\ndatabase_get_by_name_url = 'https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/databases:getIdByName?database_name=mock_db_name'\ndatabases_get_callback = <function databases_get_callback.<locals>.get_databases_callback_inner at 0x7ff3d3f104c0>\ndatabases_url = 'https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/databases'\nmock_database = Database(name='mock_db_name', compute_region_key=RegionKey(provider_id='mock_provider_id', region_id='mock_region_id_1...ket_name=None, create_time=None, create_actor=None, last_update_time=None, last_update_actor=None, desired_status=None)\n\n    def test_database_get_many(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        provider_callback: Callable,\n        provider_url: str,\n        settings: Settings,\n        account_id_callback: Callable,\n        account_id_url: Pattern,\n        database_get_by_name_callback: Callable,\n        database_get_by_name_url: str,\n        databases_get_callback: Callable,\n        databases_url: str,\n        mock_database: Database,\n    ):\n    \n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        httpx_mock.add_callback(provider_callback, url=provider_url)\n        httpx_mock.add_callback(account_id_callback, url=account_id_url)\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        httpx_mock.add_callback(\n            databases_get_callback,\n            url=compile(databases_url + \"?[a-zA-Z0-9=&]*\"),\n            method=\"GET\",\n        )\n    \n        manager = ResourceManager(settings=settings)\n>       databases = manager.databases.get_many(\n            name_contains=mock_database.name,\n            attached_engine_name_eq=\"mockengine\",\n            attached_engine_name_contains=\"mockengine\",\n        )\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/service/test_database.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/service/V1/database.py:78: in get_many\n    response = self.client.get(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1053: in get\n    return self.request(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:825: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:123: in _send_handling_redirects\n    return super()._send_handling_redirects(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py:40: in mocked_handle_request\n    return mock._handle_request(transport, request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:163: in _handle_request\n    self._request_not_matched(real_transport, request)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7ff3d30db820>\nreal_transport = <firebolt.client.http_backend.KeepaliveTransport object at 0x7ff3d3c82670>\nrequest = <AuthRequest('POST', 'https://api-dev.mock.firebolt.io/auth/v1/login')>\n\n    def _request_not_matched(\n        self,\n        real_transport: Union[httpx.AsyncHTTPTransport, httpx.HTTPTransport],\n        request: httpx.Request,\n    ) -> NoReturn:\n        self._requests_not_matched.append(request)\n>       raise httpx.TimeoutException(\n            self._explain_that_no_response_was_found(real_transport, request),\n            request=request,\n        )\nE       httpx.TimeoutException: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\nE       - Match GET request on re.compile('https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/databases?[a-zA-Z0-9=&]*')\nE       - Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\nE       - Already matched any request on https://api-dev.mock.firebolt.io/compute/v1/providers\nE       - Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\nE       - Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\nE       \nE       If you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:191: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"insert_assert_add_to_builtins","time":{"start":1759509230762,"stop":1759509230763,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session","time":{"start":1759509230763,"stop":1759509230763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759509230763,"stop":1759509230763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1759509243919,"stop":1759509243922,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"disable_cache","time":{"start":1759509243919,"stop":1759509243919,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail","time":{"start":1759509243919,"stop":1759509243919,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1759509243919,"stop":1759509243919,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1759509243922,"stop":1759509243922,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1759509243922,"stop":1759509243922,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1759509243922,"stop":1759509243922,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1759509243922,"stop":1759509243923,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"provider_callback","time":{"start":1759509243923,"stop":1759509243923,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"mock_providers","time":{"start":1759509243923,"stop":1759509243923,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"region_string","time":{"start":1759509243923,"stop":1759509243924,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"provider_url","time":{"start":1759509243923,"stop":1759509243923,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_callback","time":{"start":1759509243923,"stop":1759509243923,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"provider","time":{"start":1759509243923,"stop":1759509243923,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_password_auth","time":{"start":1759509243924,"stop":1759509243950,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user","time":{"start":1759509243924,"stop":1759509243924,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"password","time":{"start":1759509243924,"stop":1759509243924,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1759509243950,"stop":1759509243950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"settings","time":{"start":1759509243950,"stop":1759509243951,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"database_id","time":{"start":1759509243951,"stop":1759509243951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id","time":{"start":1759509243951,"stop":1759509243951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_url","time":{"start":1759509243951,"stop":1759509243951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_callback","time":{"start":1759509243951,"stop":1759509243951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"region_1","time":{"start":1759509243951,"stop":1759509243951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"mock_database","time":{"start":1759509243952,"stop":1759509243952,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"databases_url","time":{"start":1759509243952,"stop":1759509243952,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"database_get_by_name_callback","time":{"start":1759509243952,"stop":1759509243952,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"database_get_by_name_url","time":{"start":1759509243952,"stop":1759509243952,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"databases_get_callback","time":{"start":1759509243952,"stop":1759509243952,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1759509246237,"stop":1759509246237,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_callback","time":{"start":1759509262596,"stop":1759509262596,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.TimeoutException: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\n- Match GET request on re.compile('https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/databases?[a-zA-Z0-9=&]*')\n- Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\n- Already matched any request on https://api-dev.mock.firebolt.io/compute/v1/providers\n- Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\n- Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\n\nIf you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7ff3d30db820>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7ff3d63591f0>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nprovider_callback = <function provider_callback.<locals>.do_mock at 0x7ff3d63590d0>\nprovider_url = 'https://api-dev.mock.firebolt.io/compute/v1/providers'\nsettings = Settings(auth=<firebolt.client.auth.username_password.UsernamePassword object at 0x7ff3d643cd40>, account_name='mock_account_name', server='api-dev.mock.firebolt.io', default_region='mock_region_1')\naccount_id_callback = <function account_id_callback.<locals>.do_mock at 0x7ff3d6359d30>\naccount_id_url = re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\ndatabase_get_by_name_callback = <function database_get_by_name_callback.<locals>.do_mock at 0x7ff3d63598b0>\ndatabase_get_by_name_url = 'https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/databases:getIdByName?database_name=mock_db_name'\ndatabases_get_callback = <function databases_get_callback.<locals>.get_databases_callback_inner at 0x7ff3d3f104c0>\ndatabases_url = 'https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/databases'\nmock_database = Database(name='mock_db_name', compute_region_key=RegionKey(provider_id='mock_provider_id', region_id='mock_region_id_1...ket_name=None, create_time=None, create_actor=None, last_update_time=None, last_update_actor=None, desired_status=None)\n\n    def test_database_get_many(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        provider_callback: Callable,\n        provider_url: str,\n        settings: Settings,\n        account_id_callback: Callable,\n        account_id_url: Pattern,\n        database_get_by_name_callback: Callable,\n        database_get_by_name_url: str,\n        databases_get_callback: Callable,\n        databases_url: str,\n        mock_database: Database,\n    ):\n    \n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        httpx_mock.add_callback(provider_callback, url=provider_url)\n        httpx_mock.add_callback(account_id_callback, url=account_id_url)\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        httpx_mock.add_callback(\n            databases_get_callback,\n            url=compile(databases_url + \"?[a-zA-Z0-9=&]*\"),\n            method=\"GET\",\n        )\n    \n        manager = ResourceManager(settings=settings)\n>       databases = manager.databases.get_many(\n            name_contains=mock_database.name,\n            attached_engine_name_eq=\"mockengine\",\n            attached_engine_name_contains=\"mockengine\",\n        )\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/service/test_database.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/service/V1/database.py:78: in get_many\n    response = self.client.get(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1053: in get\n    return self.request(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:825: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:123: in _send_handling_redirects\n    return super()._send_handling_redirects(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py:40: in mocked_handle_request\n    return mock._handle_request(transport, request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:163: in _handle_request\n    self._request_not_matched(real_transport, request)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7ff3d30db820>\nreal_transport = <firebolt.client.http_backend.KeepaliveTransport object at 0x7ff3d3c82670>\nrequest = <AuthRequest('POST', 'https://api-dev.mock.firebolt.io/auth/v1/login')>\n\n    def _request_not_matched(\n        self,\n        real_transport: Union[httpx.AsyncHTTPTransport, httpx.HTTPTransport],\n        request: httpx.Request,\n    ) -> NoReturn:\n        self._requests_not_matched.append(request)\n>       raise httpx.TimeoutException(\n            self._explain_that_no_response_was_found(real_transport, request),\n            request=request,\n        )\nE       httpx.TimeoutException: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\nE       - Match GET request on re.compile('https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/databases?[a-zA-Z0-9=&]*')\nE       - Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\nE       - Already matched any request on https://api-dev.mock.firebolt.io/compute/v1/providers\nE       - Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\nE       - Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\nE       \nE       If you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:191: TimeoutException","steps":[],"attachments":[{"uid":"afe1ec3a79912f52","name":"log","source":"afe1ec3a79912f52.txt","type":"text/plain","size":246}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"httpx_mock::0","time":{"start":1759509244133,"stop":1759509244133,"duration":0},"status":"failed","statusMessage":"AssertionError: The following responses are mocked but not requested:\n  - Match GET request on re.compile('https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/databases?[a-zA-Z0-9=&]*')\n  \n  If this is on purpose, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-more-responses-than-what-will-be-requested\nassert not [<pytest_httpx._request_matcher._RequestMatcher object at 0x7ff3d3c82580>]\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 231, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 938, in _teardown_yield_fixture\n    next(it)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py\", line 67, in httpx_mock\n    mock._assert_options()\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py\", line 319, in _assert_options\n    assert not callbacks_not_executed, (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"monkeypatch::0","time":{"start":1759509244133,"stop":1759509244133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1759509244134,"stop":1759509244135,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail::0","time":{"start":1759509244135,"stop":1759509244135,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session::0","time":{"start":1759509291345,"stop":1759509291345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.service"},{"name":"suite","value":"test_database"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2436-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.service.test_database"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a2eba6c1fd9295e5.json","parameterValues":[]}