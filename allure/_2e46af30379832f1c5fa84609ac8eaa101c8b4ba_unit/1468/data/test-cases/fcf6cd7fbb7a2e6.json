{"uid":"fcf6cd7fbb7a2e6","name":"test_connect_default_engine","fullName":"tests.unit.V1.db.test_connection#test_connect_default_engine","historyId":"8920906f58846a0ef785e2c450f58a7b","time":{"start":1759509237049,"stop":1759509237108,"duration":59},"status":"broken","statusMessage":"firebolt.utils.exception.InterfaceError: Unable to retrieve default engine endpoint: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\n- Match any request on https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database\n- Match any request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines:getURLByDatabaseName?database_name=database\n- Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\n- Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\n\nIf you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request.","statusTrace":"self = <firebolt.client.client.ClientV1 object at 0x7ff3d366ebe0>\ndatabase = 'database'\n\n    def _get_database_default_engine_url(\n        self,\n        database: str,\n    ) -> str:\n        try:\n            account_id = self.account_id\n>           response = self.get(\n                url=ACCOUNT_ENGINE_URL_BY_DATABASE_NAME_V1.format(\n                    account_id=account_id\n                ),\n                params={\"database_name\": database},\n            )\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:225: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1053: in get\n    return self.request(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:825: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:123: in _send_handling_redirects\n    return super()._send_handling_redirects(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py:40: in mocked_handle_request\n    return mock._handle_request(transport, request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:163: in _handle_request\n    self._request_not_matched(real_transport, request)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7ff3d38526d0>\nreal_transport = <firebolt.client.http_backend.KeepaliveTransport object at 0x7ff3d366eb50>\nrequest = <AuthRequest('POST', 'https://api-dev.mock.firebolt.io/auth/v1/login')>\n\n    def _request_not_matched(\n        self,\n        real_transport: Union[httpx.AsyncHTTPTransport, httpx.HTTPTransport],\n        request: httpx.Request,\n    ) -> NoReturn:\n        self._requests_not_matched.append(request)\n>       raise httpx.TimeoutException(\n            self._explain_that_no_response_was_found(real_transport, request),\n            request=request,\n        )\nE       httpx.TimeoutException: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\nE       - Match any request on https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database\nE       - Match any request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines:getURLByDatabaseName?database_name=database\nE       - Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\nE       - Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\nE       \nE       If you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:191: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nengine_url = 'mock_engine_name.mock.firebolt.io'\napi_endpoint = 'api-dev.mock.firebolt.io', account_name = 'mock_account_name'\ndb_name = 'database'\nhttpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7ff3d38526d0>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7ff3d369b820>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nquery_callback = <function query_callback.<locals>.do_query at 0x7ff3d369b940>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\naccount_id_url = re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\naccount_id_callback = <function account_id_callback.<locals>.do_mock at 0x7ff3d36c83a0>\ndatabase_id = 'database_id'\nengine_by_db_url = 'https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines:getURLByDatabaseName?database_name=database'\npython_query_data = [[0, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], [1, 256, 70000, -32768, 922337203685477580, -9...337203685477580, -922337203685477580, ...], [5, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], ...]\naccount_id = 'mock_account_id'\n\n    def test_connect_default_engine(\n        engine_url: str,\n        api_endpoint: str,\n        account_name: str,\n        db_name: str,\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        query_callback: Callable,\n        query_url: str,\n        account_id_url: Pattern,\n        account_id_callback: Callable,\n        database_id: str,\n        engine_by_db_url: str,\n        python_query_data: List[List[ColType]],\n        account_id: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        httpx_mock.add_callback(query_callback, url=query_url)\n        httpx_mock.add_callback(account_id_callback, url=account_id_url)\n        engine_by_db_url = f\"{engine_by_db_url}?database_name={db_name}\"\n    \n        httpx_mock.add_response(\n            url=engine_by_db_url,\n            status_code=codes.OK,\n            json={\n                \"engine_url\": engine_url,\n            },\n        )\n>       with connect(\n            database=db_name,\n            auth=UsernamePassword(\"u\", \"p\"),\n            account_name=account_name,\n            api_endpoint=api_endpoint,\n        ) as connection:\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_connection.py:196: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/db/connection.py:103: in connect\n    return connect_v1(\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/db/connection.py:397: in connect_v1\n    engine_url = no_engine_client._get_database_default_engine_url(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <firebolt.client.client.ClientV1 object at 0x7ff3d366ebe0>\ndatabase = 'database'\n\n    def _get_database_default_engine_url(\n        self,\n        database: str,\n    ) -> str:\n        try:\n            account_id = self.account_id\n            response = self.get(\n                url=ACCOUNT_ENGINE_URL_BY_DATABASE_NAME_V1.format(\n                    account_id=account_id\n                ),\n                params={\"database_name\": database},\n            )\n            response.raise_for_status()\n            return response.json()[\"engine_url\"]\n        except (\n            JSONDecodeError,\n            RequestError,\n            RuntimeError,\n            HTTPStatusError,\n            KeyError,\n        ) as e:\n>           raise InterfaceError(f\"Unable to retrieve default engine endpoint: {e}.\")\nE           firebolt.utils.exception.InterfaceError: Unable to retrieve default engine endpoint: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\nE           - Match any request on https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database\nE           - Match any request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines:getURLByDatabaseName?database_name=database\nE           - Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\nE           - Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\nE           \nE           If you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request.\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:240: InterfaceError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"insert_assert_add_to_builtins","time":{"start":1759509230762,"stop":1759509230763,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session","time":{"start":1759509230763,"stop":1759509230763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759509230763,"stop":1759509230763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"disable_cache","time":{"start":1759509237042,"stop":1759509237042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1759509237042,"stop":1759509237042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail","time":{"start":1759509237042,"stop":1759509237042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1759509237042,"stop":1759509237044,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_name","time":{"start":1759509237044,"stop":1759509237044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_url","time":{"start":1759509237045,"stop":1759509237045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"db_name","time":{"start":1759509237045,"stop":1759509237045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1759509237045,"stop":1759509237045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1759509237045,"stop":1759509237045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1759509237045,"stop":1759509237045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1759509237045,"stop":1759509237045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_callback","time":{"start":1759509237046,"stop":1759509237046,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_statistics","time":{"start":1759509237046,"stop":1759509237046,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_callback","time":{"start":1759509237046,"stop":1759509237046,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1759509237046,"stop":1759509237046,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_description","time":{"start":1759509237046,"stop":1759509237046,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_data","time":{"start":1759509237046,"stop":1759509237046,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_callback","time":{"start":1759509237047,"stop":1759509237047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id","time":{"start":1759509237047,"stop":1759509237047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"database_id","time":{"start":1759509237047,"stop":1759509237047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_url","time":{"start":1759509237047,"stop":1759509237047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_url","time":{"start":1759509237047,"stop":1759509237047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_by_db_url","time":{"start":1759509237048,"stop":1759509237048,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"python_query_data","time":{"start":1759509237048,"stop":1759509237048,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1759509246237,"stop":1759509246237,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"monkeypatch::0","time":{"start":1759509237280,"stop":1759509237280,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock::0","time":{"start":1759509237280,"stop":1759509237280,"duration":0},"status":"failed","statusMessage":"AssertionError: The following responses are mocked but not requested:\n  - Match any request on https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database\n  - Match any request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines:getURLByDatabaseName?database_name=database\n  \n  If this is on purpose, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-more-responses-than-what-will-be-requested\nassert not [<pytest_httpx._request_matcher._RequestMatcher object at 0x7ff3d36f1b50>, <pytest_httpx._request_matcher._RequestMatcher object at 0x7ff3d36f1c10>]\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 231, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 938, in _teardown_yield_fixture\n    next(it)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py\", line 67, in httpx_mock\n    mock._assert_options()\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py\", line 319, in _assert_options\n    assert not callbacks_not_executed, (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1759509237283,"stop":1759509237283,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail::0","time":{"start":1759509237284,"stop":1759509237284,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session::0","time":{"start":1759509291345,"stop":1759509291345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.db"},{"name":"suite","value":"test_connection"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2436-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.db.test_connection"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"fcf6cd7fbb7a2e6.json","parameterValues":[]}