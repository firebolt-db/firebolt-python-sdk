{"uid":"45d44119f09d8c02","name":"test_set_invalid_parameter[core]","fullName":"tests.integration.dbapi.sync.V2.test_queries#test_set_invalid_parameter","historyId":"ec06b4c8ae6486732a3f6a336521226b","time":{"start":1759850700465,"stop":1759850700467,"duration":2},"status":"broken","statusMessage":"firebolt.utils.exception.FireboltError: {\n  \"errors\": [\n    {\n      \"description\": \"Unknown setting some_invalid_parameter\"\n    }\n  ],\n  \"query\": {\n    \"query_id\": \"\",\n    \"query_label\": null,\n    \"request_id\": \"\"\n  },\n  \"statistics\": {\n    \"elapsed\": 0.0\n  }\n}","statusTrace":"connection = <firebolt.db.connection.Connection object at 0x7ff7265b0890>\n\n    def test_set_invalid_parameter(connection: Connection):\n        with connection.cursor() as c:\n            assert len(c._set_parameters) == 0\n            with raises((OperationalError, FireboltStructuredError)) as e:\n>               c.execute(\"set some_invalid_parameter = 1\")\n\ntests/integration/dbapi/sync/V2/test_queries.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/firebolt/common/cursor/decorators.py:24: in inner\n    return func(self, *args, **kwargs)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/firebolt/db/cursor.py:413: in execute\n    self._do_execute(query, params_list, skip_parsing, timeout=timeout_seconds)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/firebolt/db/cursor.py:251: in _do_execute\n    self._execute_single_query(\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/firebolt/db/cursor.py:303: in _execute_single_query\n    self._validate_set_parameter(query, timeout_controller.remaining())\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/firebolt/db/cursor.py:177: in _validate_set_parameter\n    self._raise_if_error(resp)\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/firebolt/db/cursor.py:122: in _raise_if_error\n    raise_error_from_response(resp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [404 Not Found]>\n\n    def raise_error_from_response(resp: Response) -> None:\n        \"\"\"\n        Raise a correct error from the response.\n        Look for a structured error in the body and raise it.\n        If the body doesn't contain a structured error,\n        log the body and raise a status code error.\n    \n        Args:\n            resp (Response): HTTP response\n        \"\"\"\n        to_raise = None\n        # If error is Text - raise as is\n        if \"text/plain\" in resp.headers.get(\"Content-Type\", \"\"):\n>           raise FireboltError(resp.text)\nE           firebolt.utils.exception.FireboltError: {\nE             \"errors\": [\nE               {\nE                 \"description\": \"Unknown setting some_invalid_parameter\"\nE               }\nE             ],\nE             \"query\": {\nE               \"query_id\": \"\",\nE               \"query_label\": null,\nE               \"request_id\": \"\"\nE             },\nE             \"statistics\": {\nE               \"elapsed\": 0.0\nE             }\nE           }\n\n/opt/hostedtoolcache/Python/3.10.18/x64/lib/python3.10/site-packages/firebolt/utils/util.py:177: FireboltError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"insert_assert_add_to_builtins","time":{"start":1759850696957,"stop":1759850696957,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_name","time":{"start":1759850696957,"stop":1759850696957,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session","time":{"start":1759850696957,"stop":1759850696957,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759850696957,"stop":1759850696957,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"database_name","time":{"start":1759850696958,"stop":1759850696958,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth","time":{"start":1759850696958,"stop":1759850697026,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"service_secret","time":{"start":1759850696958,"stop":1759850696958,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"service_id","time":{"start":1759850696958,"stop":1759850696958,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"core_url","time":{"start":1759850697026,"stop":1759850697026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"core_auth","time":{"start":1759850697026,"stop":1759850697026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1759850697026,"stop":1759850697026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1759850697026,"stop":1759850697026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail","time":{"start":1759850700439,"stop":1759850700440,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connection","time":{"start":1759850700440,"stop":1759850700464,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"connection::0","time":{"start":1759850700505,"stop":1759850700505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail::0","time":{"start":1759850700505,"stop":1759850700505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session::0","time":{"start":1759850703297,"stop":1759850703297,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.integration.dbapi.sync.V2"},{"name":"suite","value":"test_queries"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"4396-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.dbapi.sync.V2.test_queries"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection","value":"'core'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"45d44119f09d8c02.json","parameterValues":["'core'"]}