{"uid":"84182446714b0275","name":"test_long_query[remote]","fullName":"tests.integration.dbapi.async.V2.test_queries_async#test_long_query","historyId":"c1c638a300530c7d064d2c9ce1cdb675","time":{"start":1755874593881,"stop":1755875143880,"duration":549999},"description":"AWS ALB TCP timeout set to 350; make sure we handle the keepalive correctly.","descriptionHtml":"<p>AWS ALB TCP timeout set to 350; make sure we handle the keepalive correctly.</p>\n","status":"failed","statusMessage":"Failed: Timeout >550.0s","statusTrace":"self = EpollIOManager(_epoll=<select.epoll object at 0x7f6ef517f270>, _registered=defaultdict(<class 'trio._core._io_epoll.Ep...ags=1)}), _force_wakeup=<trio._core._wakeup_socketpair.WakeupSocketpair object at 0x7f6ef529b850>, _force_wakeup_fd=14)\ntimeout = 86400\n\n    def get_events(self, timeout: float) -> EventResult:\n        # max_events must be > 0 or epoll gets cranky\n        # accessing self._registered from a thread looks dangerous, but it's\n        # OK because it doesn't matter if our value is a little bit off.\n        max_events = max(1, len(self._registered))\n>       return self._epoll.poll(timeout, max_events)\nE       Failed: Timeout >550.0s\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/trio/_core/_io_epoll.py:245: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"database_name","time":{"start":1755874592496,"stop":1755874592496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"engine_name","time":{"start":1755874592496,"stop":1755874592496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"service_id","time":{"start":1755874592496,"stop":1755874592496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"service_secret","time":{"start":1755874592497,"stop":1755874592497,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"auth","time":{"start":1755874592497,"stop":1755874592603,"duration":106},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"api_endpoint","time":{"start":1755874592603,"stop":1755874592603,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"account_name","time":{"start":1755874592603,"stop":1755874592604,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"core_auth","time":{"start":1755874593880,"stop":1755874593880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"minimal_time","time":{"start":1755874593880,"stop":1755874593880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"connection","time":{"start":1755874593880,"stop":1755874593880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"core_url","time":{"start":1755874593880,"stop":1755874593880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"long_test_value","time":{"start":1755874593880,"stop":1755874593880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"testStage":{"description":"AWS ALB TCP timeout set to 350; make sure we handle the keepalive correctly.","status":"failed","statusMessage":"Failed: Timeout >550.0s","statusTrace":"self = EpollIOManager(_epoll=<select.epoll object at 0x7f6ef517f270>, _registered=defaultdict(<class 'trio._core._io_epoll.Ep...ags=1)}), _force_wakeup=<trio._core._wakeup_socketpair.WakeupSocketpair object at 0x7f6ef529b850>, _force_wakeup_fd=14)\ntimeout = 86400\n\n    def get_events(self, timeout: float) -> EventResult:\n        # max_events must be > 0 or epoll gets cranky\n        # accessing self._registered from a thread looks dangerous, but it's\n        # OK because it doesn't matter if our value is a little bit off.\n        max_events = max(1, len(self._registered))\n>       return self._epoll.poll(timeout, max_events)\nE       Failed: Timeout >550.0s\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/trio/_core/_io_epoll.py:245: Failed","steps":[],"attachments":[{"uid":"f048d62fee044449","name":"stderr","source":"f048d62fee044449.txt","type":"text/plain","size":888}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1},"afterStages":[{"name":"minimal_time::0","time":{"start":1755875143889,"stop":1755875143889,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"tag","value":"slow"},{"name":"parentSuite","value":"tests.integration.dbapi.async.V2"},{"name":"suite","value":"test_queries_async"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2479-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.dbapi.async.V2.test_queries_async"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"connection","value":"'remote'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["slow"]},"source":"84182446714b0275.json","parameterValues":["'remote'"]}