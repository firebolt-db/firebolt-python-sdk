{"uid":"87d35c0ffb6b55cf","name":"test_executemany_bulk_insert_qmark","fullName":"tests.unit.db.test_cursor#test_executemany_bulk_insert_qmark","historyId":"27a49fac14e932416c5d15e0ba5dace3","time":{"start":1760004340619,"stop":1760004340623,"duration":4},"description":"executemany with bulk_insert=True concatenates INSERT queries with QMARK style.","descriptionHtml":"<p>executemany with bulk_insert=True concatenates INSERT queries with QMARK style.</p>\n","status":"broken","statusMessage":"firebolt.utils.exception.QueryTimeoutError: Query execution timed out.","statusTrace":"self = <firebolt.db.cursor.CursorV2 object at 0x7f18be088d30>\nquery = \"INSERT INTO test_table VALUES (1, 'a'); INSERT INTO test_table VALUES (2, 'b'); INSERT INTO test_table VALUES (3, 'c')\"\nparameters = {'database': 'database', 'merge_prepared_statement_batches': 'true', 'output_format': 'JSON_Compact'}\npath = '', use_set_parameters = True, timeout = None\n\n    def _api_request(\n        self,\n        query: str = \"\",\n        parameters: Optional[dict[str, Any]] = None,\n        path: str = \"\",\n        use_set_parameters: bool = True,\n        timeout: Optional[float] = None,\n    ) -> Response:\n        \"\"\"\n        Query API, return Response object.\n    \n        Args:\n            query (str): SQL query\n            parameters (Optional[Sequence[ParameterType]]): A sequence of substitution\n                parameters. Used to replace '?' placeholders inside a query with\n                actual values. Note: In order to \"output_format\" dict value, it\n                    must be an empty string. If no value not specified,\n                    JSON_OUTPUT_FORMAT will be used.\n            path (str): endpoint suffix, for example \"cancel\" or \"status\"\n            use_set_parameters: Optional[bool]: Some queries will fail if additional\n                set parameters are sent. Setting this to False will allow\n                self._set_parameters to be ignored.\n            timeout (Optional[float]): Request execution timeout in seconds\n        \"\"\"\n        parameters = parameters or {}\n        if use_set_parameters:\n            parameters = {**(self._set_parameters or {}), **parameters}\n        if self.parameters:\n            parameters = {**self.parameters, **parameters}\n        try:\n            req = self._client.build_request(\n                url=urljoin(self.engine_url.rstrip(\"/\") + \"/\", path or \"\"),\n                method=\"POST\",\n                params=parameters,\n                content=query,\n                timeout=timeout if timeout is not None else USE_CLIENT_DEFAULT,\n            )\n>           return self._client.send(req, stream=True)\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/db/cursor.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:123: in _send_handling_redirects\n    return super()._send_handling_redirects(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py:40: in mocked_handle_request\n    return mock._handle_request(transport, request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:163: in _handle_request\n    self._request_not_matched(real_transport, request)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f18bb6228b0>\nreal_transport = <firebolt.client.http_backend.KeepaliveTransport object at 0x7f18bb4608b0>\nrequest = <Request('POST', 'https://mock_engine_name.mock.firebolt.io/?database=database&output_format=JSON_Compact&merge_prepared_statement_batches=true')>\n\n    def _request_not_matched(\n        self,\n        real_transport: Union[httpx.AsyncHTTPTransport, httpx.HTTPTransport],\n        request: httpx.Request,\n    ) -> NoReturn:\n        self._requests_not_matched.append(request)\n>       raise httpx.TimeoutException(\n            self._explain_that_no_response_was_found(real_transport, request),\n            request=request,\n        )\nE       httpx.TimeoutException: No response can be found for POST request on https://mock_engine_name.mock.firebolt.io/?database=database&output_format=JSON_Compact&merge_prepared_statement_batches=true with b\"INSERT INTO test_table VALUES (1, 'a'); INSERT INTO test_table VALUES (2, 'b'); INSERT INTO test_table VALUES (3, 'c')\" body amongst:\nE       - Match any request on https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database\nE       - Match every request on https://id.mock.firebolt.io/oauth/token\nE       - Match every request on https://api-dev.mock.firebolt.io/web/v3/account/mock_account_name/engineUrl\nE       - Match every request on https://bravo.a.eu-west-1.aws.mock.firebolt.io/?output_format=JSON_Compact with b'USE DATABASE \"database\"' body\nE       - Match every request on https://bravo.a.eu-west-1.aws.mock.firebolt.io/?output_format=JSON_Compact&database=database with b'USE ENGINE \"mock_engine_name\"' body\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:191: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nhttpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f18bb6228b0>\ncursor = <firebolt.db.cursor.CursorV2 object at 0x7f18be088d30>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\npython_query_data = [[0, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], [1, 256, 70000, -32768, 922337203685477580, -9...337203685477580, -922337203685477580, ...], [5, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], ...]\n\n    def test_executemany_bulk_insert_qmark(\n        httpx_mock: HTTPXMock,\n        cursor: Cursor,\n        query_url: str,\n        python_query_data: List[List[ColType]],\n    ):\n        \"\"\"executemany with bulk_insert=True concatenates INSERT queries with QMARK style.\"\"\"\n    \n        def bulk_insert_callback(request):\n            assert request.url.params.get(\"merge_prepared_statement_batches\") == \"true\"\n    \n            query = request.content.decode()\n            assert query.count(\"INSERT INTO\") == 3\n            assert \"; \" in query\n    \n            return Response(\n                status_code=200,\n                content=json.dumps(\n                    {\n                        \"data\": [],\n                        \"rows\": 0,\n                        \"statistics\": {},\n                    }\n                ),\n                headers={},\n            )\n    \n        httpx_mock.add_callback(bulk_insert_callback, url=query_url)\n    \n>       result = cursor.executemany(\n            \"INSERT INTO test_table VALUES (?, ?)\",\n            [(1, \"a\"), (2, \"b\"), (3, \"c\")],\n            bulk_insert=True,\n        )\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/db/test_cursor.py:1425: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/common/cursor/decorators.py:24: in inner\n    return func(self, *args, **kwargs)\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/db/cursor.py:461: in executemany\n    return self._executemany_bulk_insert(query, parameters_seq, timeout_seconds)\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/db/cursor.py:554: in _executemany_bulk_insert\n    resp = self._api_request(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <firebolt.db.cursor.CursorV2 object at 0x7f18be088d30>\nquery = \"INSERT INTO test_table VALUES (1, 'a'); INSERT INTO test_table VALUES (2, 'b'); INSERT INTO test_table VALUES (3, 'c')\"\nparameters = {'database': 'database', 'merge_prepared_statement_batches': 'true', 'output_format': 'JSON_Compact'}\npath = '', use_set_parameters = True, timeout = None\n\n    def _api_request(\n        self,\n        query: str = \"\",\n        parameters: Optional[dict[str, Any]] = None,\n        path: str = \"\",\n        use_set_parameters: bool = True,\n        timeout: Optional[float] = None,\n    ) -> Response:\n        \"\"\"\n        Query API, return Response object.\n    \n        Args:\n            query (str): SQL query\n            parameters (Optional[Sequence[ParameterType]]): A sequence of substitution\n                parameters. Used to replace '?' placeholders inside a query with\n                actual values. Note: In order to \"output_format\" dict value, it\n                    must be an empty string. If no value not specified,\n                    JSON_OUTPUT_FORMAT will be used.\n            path (str): endpoint suffix, for example \"cancel\" or \"status\"\n            use_set_parameters: Optional[bool]: Some queries will fail if additional\n                set parameters are sent. Setting this to False will allow\n                self._set_parameters to be ignored.\n            timeout (Optional[float]): Request execution timeout in seconds\n        \"\"\"\n        parameters = parameters or {}\n        if use_set_parameters:\n            parameters = {**(self._set_parameters or {}), **parameters}\n        if self.parameters:\n            parameters = {**self.parameters, **parameters}\n        try:\n            req = self._client.build_request(\n                url=urljoin(self.engine_url.rstrip(\"/\") + \"/\", path or \"\"),\n                method=\"POST\",\n                params=parameters,\n                content=query,\n                timeout=timeout if timeout is not None else USE_CLIENT_DEFAULT,\n            )\n            return self._client.send(req, stream=True)\n        except TimeoutException:\n>           raise QueryTimeoutError()\nE           firebolt.utils.exception.QueryTimeoutError: Query execution timed out.\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/db/cursor.py:165: QueryTimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"insert_assert_add_to_builtins","time":{"start":1760004281804,"stop":1760004281805,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1760004281805,"stop":1760004281805,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session","time":{"start":1760004281805,"stop":1760004281805,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"disable_cache","time":{"start":1760004340504,"stop":1760004340504,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1760004340504,"stop":1760004340504,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail","time":{"start":1760004340504,"stop":1760004340504,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1760004340505,"stop":1760004340507,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1760004340507,"stop":1760004340507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1760004340507,"stop":1760004340507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1760004340507,"stop":1760004340507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"db_name","time":{"start":1760004340507,"stop":1760004340507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client_id","time":{"start":1760004340508,"stop":1760004340508,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth","time":{"start":1760004340508,"stop":1760004340529,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client_secret","time":{"start":1760004340508,"stop":1760004340508,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_name","time":{"start":1760004340529,"stop":1760004340530,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1760004340530,"stop":1760004340530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"access_token","time":{"start":1760004340530,"stop":1760004340530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_endpoint","time":{"start":1760004340530,"stop":1760004340530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1760004340530,"stop":1760004340530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"system_engine_url","time":{"start":1760004340531,"stop":1760004340531,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"mock_system_engine_connection_flow","time":{"start":1760004340531,"stop":1760004340531,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_system_engine_url","time":{"start":1760004340531,"stop":1760004340531,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_system_engine_callback","time":{"start":1760004340531,"stop":1760004340531,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"check_credentials_callback","time":{"start":1760004340531,"stop":1760004340531,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"use_database_callback","time":{"start":1760004340532,"stop":1760004340532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"mock_connection_flow","time":{"start":1760004340532,"stop":1760004340533,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"use_engine_callback","time":{"start":1760004340532,"stop":1760004340532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_url","time":{"start":1760004340532,"stop":1760004340532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"system_engine_no_db_query_url","time":{"start":1760004340532,"stop":1760004340532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"system_engine_query_url","time":{"start":1760004340532,"stop":1760004340532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_statistics","time":{"start":1760004340532,"stop":1760004340532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connection","time":{"start":1760004340533,"stop":1760004340617,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cursor","time":{"start":1760004340617,"stop":1760004340617,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_url","time":{"start":1760004340617,"stop":1760004340618,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"python_query_data","time":{"start":1760004340618,"stop":1760004340618,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"connection::0","time":{"start":1760004340830,"stop":1760004340830,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock::0","time":{"start":1760004340839,"stop":1760004340841,"duration":2},"status":"failed","statusMessage":"AssertionError: The following responses are mocked but not requested:\n  - Match any request on https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database\n  \n  If this is on purpose, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-more-responses-than-what-will-be-requested\nassert not [<pytest_httpx._request_matcher._RequestMatcher object at 0x7f18bb427190>]\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 231, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 938, in _teardown_yield_fixture\n    next(it)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py\", line 67, in httpx_mock\n    mock._assert_options()\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py\", line 319, in _assert_options\n    assert not callbacks_not_executed, (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"monkeypatch::0","time":{"start":1760004340841,"stop":1760004340841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1760004340842,"stop":1760004340843,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail::0","time":{"start":1760004340843,"stop":1760004340843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session::0","time":{"start":1760004347984,"stop":1760004347984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.db"},{"name":"suite","value":"test_cursor"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2476-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.db.test_cursor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"87d35c0ffb6b55cf.json","parameterValues":[]}