{"uid":"bb7726738392b6d","name":"test_parse_json_lines_record[record_data1-DataRecord-DATA]","fullName":"tests.unit.common.row_set.test_json_lines#test_parse_json_lines_record","historyId":"92d7c38532f5cb7a602860481b551bd6","time":{"start":1760373071843,"stop":1760373071844,"duration":1},"description":"Test that parse_json_lines_record correctly parses various record types.","descriptionHtml":"<p>Test that parse_json_lines_record correctly parses various record types.</p>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1760373025451,"stop":1760373025451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_add_to_builtins","time":{"start":1760373025451,"stop":1760373025451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session","time":{"start":1760373025451,"stop":1760373025451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail","time":{"start":1760373071839,"stop":1760373071840,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1760373071840,"stop":1760373071840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1760373071840,"stop":1760373071842,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"disable_cache","time":{"start":1760373071840,"stop":1760373071840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"global_fake_fs::0","time":{"start":1760373071847,"stop":1760373071848,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail::0","time":{"start":1760373071849,"stop":1760373071849,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session::0","time":{"start":1760373096590,"stop":1760373096590,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.common.row_set"},{"name":"suite","value":"test_json_lines"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2418-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.common.row_set.test_json_lines"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_type","value":"<class 'firebolt.common.row_set.json_lines.DataRecord'>"},{"name":"message_type_value","value":"'DATA'"},{"name":"record_data","value":"{'message_type': 'DATA', 'data': [[1, 2, 3]]}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"bb7726738392b6d.json","parameterValues":["<class 'firebolt.common.row_set.json_lines.DataRecord'>","'DATA'","{'message_type': 'DATA', 'data': [[1, 2, 3]]}"]}