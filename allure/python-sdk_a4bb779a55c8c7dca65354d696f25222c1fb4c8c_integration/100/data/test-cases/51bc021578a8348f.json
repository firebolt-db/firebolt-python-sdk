{"uid":"51bc021578a8348f","name":"test_create_start_stop_engine","fullName":"tests.integration.resource_manager.V2.test_engine#test_create_start_stop_engine","historyId":"c84a7356d24aaf957cf345cc9a45ab12","time":{"start":1759740902513,"stop":1759740919024,"duration":16511},"status":"broken","statusMessage":"firebolt.utils.exception.FireboltStructuredError: - Cannot drop database 'integration_testing__1759740820551_start_stop' because it is set as the default database for engine 'integration_testing__1759740820551_start_stop'. Remove this database as the default from the engine before dropping it.","statusTrace":"auth = <firebolt.client.auth.client_credentials.ClientCredentials object at 0x7f8bd74023c0>\naccount_name = 'automation', api_endpoint = 'api.staging.firebolt.io'\nstart_stop_engine_name = 'integration_testing__1759740820551_start_stop'\n\n    @mark.slow\n    def test_create_start_stop_engine(\n        auth: Auth,\n        account_name: str,\n        api_endpoint: str,\n        start_stop_engine_name: str,\n    ):\n        rm = ResourceManager(\n            auth=auth, account_name=account_name, api_endpoint=api_endpoint\n        )\n        name = start_stop_engine_name\n        spec = rm.instance_types.get(\"S\")\n    \n        engine = rm.engines.create(\n            name=name,\n            spec=spec,\n            scale=1,\n            auto_stop=120,\n        )\n        assert engine.name == name\n    \n        try:\n            database = rm.databases.create(name=name)\n            assert database.name == name\n    \n            try:\n                engine.attach_to_database(database)\n                assert engine.database == database\n    \n                engine.start()\n                assert engine.current_status == EngineStatus.RUNNING\n    \n                engine.stop()\n                assert engine.current_status in {\n                    EngineStatus.STOPPING,\n                    EngineStatus.STOPPED,\n                }\n            finally:\n>               database.delete()\n\ntests/integration/resource_manager/V2/test_engine.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/model/V2/database.py:91: in delete\n    c.execute(self.DROP_SQL.format(self.name))\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/common/cursor/decorators.py:24: in inner\n    return func(self, *args, **kwargs)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/cursor.py:413: in execute\n    self._do_execute(query, params_list, skip_parsing, timeout=timeout_seconds)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/cursor.py:251: in _do_execute\n    self._execute_single_query(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/cursor.py:305: in _execute_single_query\n    self._handle_query_execution(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/cursor.py:334: in _handle_query_execution\n    self._raise_if_error(resp)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/cursor.py:122: in _raise_if_error\n    raise_error_from_response(resp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [400 Bad Request]>\n\n    def raise_error_from_response(resp: Response) -> None:\n        \"\"\"\n        Raise a correct error from the response.\n        Look for a structured error in the body and raise it.\n        If the body doesn't contain a structured error,\n        log the body and raise a status code error.\n    \n        Args:\n            resp (Response): HTTP response\n        \"\"\"\n        to_raise = None\n        try:\n            decoded = resp.json()\n            if \"errors\" in decoded and len(decoded[\"errors\"]) > 0:\n                # Raise later to avoid catching it in the except block\n                to_raise = FireboltStructuredError(decoded)\n    \n        except Exception:\n            # If we can't parse the body, print out the error body\n            if \"Content-Length\" in resp.headers and int(resp.headers[\"Content-Length\"]) > 0:\n                logger.error(f\"Something went wrong: {resp.read().decode('utf-8')}\")\n    \n        if to_raise:\n>           raise to_raise\nE           firebolt.utils.exception.FireboltStructuredError: - Cannot drop database 'integration_testing__1759740820551_start_stop' because it is set as the default database for engine 'integration_testing__1759740820551_start_stop'. Remove this database as the default from the engine before dropping it.\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/utils/util.py:186: FireboltStructuredError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"account_name","time":{"start":1759740847017,"stop":1759740847017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"database_name","time":{"start":1759740847017,"stop":1759740847017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1759740847017,"stop":1759740847017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth","time":{"start":1759740847018,"stop":1759740847162,"duration":144},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"service_secret","time":{"start":1759740847018,"stop":1759740847018,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"service_id","time":{"start":1759740847018,"stop":1759740847018,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"start_stop_engine_name","time":{"start":1759740902512,"stop":1759740902512,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"slow"},{"name":"parentSuite","value":"tests.integration.resource_manager.V2"},{"name":"suite","value":"test_engine"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2479-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.resource_manager.V2.test_engine"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"6f249e74d7b367a4","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/allure/python-sdk_a4bb779a55c8c7dca65354d696f25222c1fb4c8c_integration/486//#testresult/6f249e74d7b367a4","status":"passed","time":{"start":1755892191166,"stop":1755892373189,"duration":182023}}]},"tags":["slow"]},"source":"51bc021578a8348f.json","parameterValues":[]}