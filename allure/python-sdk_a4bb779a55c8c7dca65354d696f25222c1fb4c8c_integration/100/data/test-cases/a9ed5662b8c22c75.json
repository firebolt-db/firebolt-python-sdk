{"uid":"a9ed5662b8c22c75","name":"test_account_no_user","fullName":"tests.integration.dbapi.sync.V2.test_errors#test_account_no_user","historyId":"446e29d1ac45c16c7fd15f05aec18ce8","time":{"start":1759740856116,"stop":1759740856631,"duration":515},"description":"Connection properly reacts to invalid account error.","descriptionHtml":"<p>Connection properly reacts to invalid account error.</p>\n","status":"broken","statusMessage":"firebolt.utils.exception.FireboltStructuredError: - Database 'integration_testing__1759740820551' does not exist or not authorized.","statusTrace":"database_name = 'integration_testing__1759740820551'\naccount_name = 'automation'\nauth_no_user = <firebolt.client.auth.client_credentials.ClientCredentials object at 0x7f23c259a540>\napi_endpoint = 'api.staging.firebolt.io'\n\n    def test_account_no_user(\n        database_name: str,\n        account_name: str,\n        auth_no_user: ClientCredentials,\n        api_endpoint: str,\n    ) -> None:\n        \"\"\"Connection properly reacts to invalid account error.\"\"\"\n        with raises(AccountNotFoundOrNoAccessError) as exc_info:\n>           with connect(\n                database=database_name,\n                auth=auth_no_user,\n                account_name=account_name,\n                api_endpoint=api_endpoint,\n                # Disable cache since for this test we want to make sure\n                # the error is raised\n                disable_cache=True,\n            ) as connection:\n\ntests/integration/dbapi/sync/V2/test_errors.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/connection.py:94: in connect\n    return connect_v2(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/connection.py:177: in connect_v2\n    cursor.use_database(database, cache=not disable_cache)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/cursor.py:357: in use_database\n    self.execute(f'USE DATABASE \"{database}\"')\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/common/cursor/decorators.py:24: in inner\n    return func(self, *args, **kwargs)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/cursor.py:413: in execute\n    self._do_execute(query, params_list, skip_parsing, timeout=timeout_seconds)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/cursor.py:251: in _do_execute\n    self._execute_single_query(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/cursor.py:305: in _execute_single_query\n    self._handle_query_execution(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/cursor.py:334: in _handle_query_execution\n    self._raise_if_error(resp)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/db/cursor.py:122: in _raise_if_error\n    raise_error_from_response(resp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [400 Bad Request]>\n\n    def raise_error_from_response(resp: Response) -> None:\n        \"\"\"\n        Raise a correct error from the response.\n        Look for a structured error in the body and raise it.\n        If the body doesn't contain a structured error,\n        log the body and raise a status code error.\n    \n        Args:\n            resp (Response): HTTP response\n        \"\"\"\n        to_raise = None\n        try:\n            decoded = resp.json()\n            if \"errors\" in decoded and len(decoded[\"errors\"]) > 0:\n                # Raise later to avoid catching it in the except block\n                to_raise = FireboltStructuredError(decoded)\n    \n        except Exception:\n            # If we can't parse the body, print out the error body\n            if \"Content-Length\" in resp.headers and int(resp.headers[\"Content-Length\"]) > 0:\n                logger.error(f\"Something went wrong: {resp.read().decode('utf-8')}\")\n    \n        if to_raise:\n>           raise to_raise\nE           firebolt.utils.exception.FireboltStructuredError: - Database 'integration_testing__1759740820551' does not exist or not authorized.\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/firebolt/utils/util.py:186: FireboltStructuredError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"account_name","time":{"start":1759740847015,"stop":1759740847015,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"database_name","time":{"start":1759740847015,"stop":1759740847015,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"service_secret","time":{"start":1759740847016,"stop":1759740847016,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"service_id","time":{"start":1759740847016,"stop":1759740847016,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth","time":{"start":1759740847019,"stop":1759740847124,"duration":105},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1759740847125,"stop":1759740847125,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connection_system_engine_no_db","time":{"start":1759740855138,"stop":1759740855195,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"service_account_no_user","time":{"start":1759740855195,"stop":1759740856103,"duration":908},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_no_user","time":{"start":1759740856104,"stop":1759740856115,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"service_account_no_user::0","time":{"start":1759740856726,"stop":1759740857166,"duration":440},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connection_system_engine_no_db::0","time":{"start":1759740857167,"stop":1759740857167,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.integration.dbapi.sync.V2"},{"name":"suite","value":"test_errors"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2482-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.dbapi.sync.V2.test_errors"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"e238c28e5392ac77","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/allure/python-sdk_a4bb779a55c8c7dca65354d696f25222c1fb4c8c_integration/486//#testresult/e238c28e5392ac77","status":"passed","time":{"start":1755892135361,"stop":1755892135756,"duration":395}}]},"tags":[]},"source":"a9ed5662b8c22c75.json","parameterValues":[]}