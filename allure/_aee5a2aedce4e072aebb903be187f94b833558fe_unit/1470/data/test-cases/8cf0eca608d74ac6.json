{"uid":"8cf0eca608d74ac6","name":"test_connect_engine_name","fullName":"tests.unit.V1.db.test_connection#test_connect_engine_name","historyId":"b29943756c7175a580b82a9f9b682f5f","time":{"start":1759509645061,"stop":1759509645150,"duration":89},"description":"connect properly handles engine_name","descriptionHtml":"<p>connect properly handles engine_name</p>\n","status":"broken","statusMessage":"firebolt.utils.exception.InterfaceError: Error TimeoutException: Unable to retrieve engine endpoint /core/v1/accounts/mock_account_id/engines:getIdByName.","statusTrace":"self = <firebolt.client.client.ClientV1 object at 0x7f5617d24c10>\nengine_name = 'mock_engine_name'\n\n    def _resolve_engine_url(self, engine_name: str) -> str:\n        account_id = self.account_id\n        url = ACCOUNT_ENGINE_ID_BY_NAME_URL.format(account_id=account_id)\n        try:\n>           response = self.get(\n                url=url,\n                params={\"engine_name\": engine_name},\n            )\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:246: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1053: in get\n    return self.request(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:825: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:123: in _send_handling_redirects\n    return super()._send_handling_redirects(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py:40: in mocked_handle_request\n    return mock._handle_request(transport, request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:163: in _handle_request\n    self._request_not_matched(real_transport, request)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f5617d2a100>\nreal_transport = <firebolt.client.http_backend.KeepaliveTransport object at 0x7f5617d24c40>\nrequest = <AuthRequest('POST', 'https://api-dev.mock.firebolt.io/auth/v1/login')>\n\n    def _request_not_matched(\n        self,\n        real_transport: Union[httpx.AsyncHTTPTransport, httpx.HTTPTransport],\n        request: httpx.Request,\n    ) -> NoReturn:\n        self._requests_not_matched.append(request)\n>       raise httpx.TimeoutException(\n            self._explain_that_no_response_was_found(real_transport, request),\n            request=request,\n        )\nE       httpx.TimeoutException: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\nE       - Match any request on https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database\nE       - Match any request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id\nE       - Match any request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines:getIdByName?engine_name=mock_engine_name\nE       - Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\nE       - Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\nE       \nE       If you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:191: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nengine_name = 'mock_engine_name', api_endpoint = 'api-dev.mock.firebolt.io'\naccount_name = 'mock_account_name', db_name = 'database'\nhttpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f5617d2a100>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f5617c4eca0>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nquery_callback = <function query_callback.<locals>.do_query at 0x7f5617c4e8b0>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\naccount_id_url = re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\naccount_id_callback = <function account_id_callback.<locals>.do_mock at 0x7f56150c68b0>\nengine_id = 'mock_engine_id'\nget_engine_url_by_id_url = 'https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id'\nget_engine_url_by_id_callback = <function get_engine_url_by_id_callback.<locals>.do_mock at 0x7f5617ccf160>\npython_query_data = [[0, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], [1, 256, 70000, -32768, 922337203685477580, -9...337203685477580, -922337203685477580, ...], [5, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], ...]\naccount_id = 'mock_account_id'\n\n    def test_connect_engine_name(\n        engine_name: str,\n        api_endpoint: str,\n        account_name: str,\n        db_name: str,\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        query_callback: Callable,\n        query_url: str,\n        account_id_url: Pattern,\n        account_id_callback: Callable,\n        engine_id: str,\n        get_engine_url_by_id_url: str,\n        get_engine_url_by_id_callback: Callable,\n        python_query_data: List[List[ColType]],\n        account_id: str,\n    ):\n        \"\"\"connect properly handles engine_name\"\"\"\n    \n        with raises(ConfigurationError):\n            connect(\n                engine_url=\"engine_url\",\n                engine_name=\"engine_name\",\n                database=\"db\",\n                auth=UsernamePassword(\"u\", \"p\"),\n            )\n    \n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        httpx_mock.add_callback(query_callback, url=query_url)\n        httpx_mock.add_callback(account_id_callback, url=account_id_url)\n        httpx_mock.add_callback(get_engine_url_by_id_callback, url=get_engine_url_by_id_url)\n    \n        # Mock engine id lookup error\n        httpx_mock.add_response(\n            url=f\"https://{api_endpoint}\"\n            + ACCOUNT_ENGINE_ID_BY_NAME_URL.format(account_id=account_id)\n            + f\"?engine_name={engine_name}\",\n            status_code=codes.NOT_FOUND,\n        )\n    \n        with raises(FireboltEngineError):\n>           connect(\n                database=\"db\",\n                auth=UsernamePassword(\"u\", \"p\"),\n                engine_name=engine_name,\n                account_name=account_name,\n                api_endpoint=api_endpoint,\n            )\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_connection.py:140: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/db/connection.py:103: in connect\n    return connect_v1(\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/db/connection.py:402: in connect_v1\n    engine_url = no_engine_client._resolve_engine_url(engine_name=engine_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <firebolt.client.client.ClientV1 object at 0x7f5617d24c10>\nengine_name = 'mock_engine_name'\n\n    def _resolve_engine_url(self, engine_name: str) -> str:\n        account_id = self.account_id\n        url = ACCOUNT_ENGINE_ID_BY_NAME_URL.format(account_id=account_id)\n        try:\n            response = self.get(\n                url=url,\n                params={\"engine_name\": engine_name},\n            )\n            response.raise_for_status()\n            engine_id = response.json()[\"engine_id\"][\"engine_id\"]\n            url = ACCOUNT_ENGINE_URL.format(account_id=account_id, engine_id=engine_id)\n            response = self.get(url=url)\n            response.raise_for_status()\n            return response.json()[\"engine\"][\"endpoint\"]\n        except HTTPStatusError as e:\n            # Engine error would be 404.\n            if e.response.status_code != 404:\n                raise InterfaceError(\n                    f\"Error {e.__class__.__name__}: Unable to retrieve engine \"\n                    f\"endpoint {url}.\"\n                )\n            # Once this is point is reached we've already authenticated with\n            # the backend so it's safe to assume the cause of the error is\n            # missing engine.\n            raise FireboltEngineError(f\"Firebolt engine {engine_name} does not exist.\")\n        except (JSONDecodeError, RequestError, RuntimeError) as e:\n>           raise InterfaceError(\n                f\"Error {e.__class__.__name__}: \"\n                f\"Unable to retrieve engine endpoint {url}.\"\n            )\nE           firebolt.utils.exception.InterfaceError: Error TimeoutException: Unable to retrieve engine endpoint /core/v1/accounts/mock_account_id/engines:getIdByName.\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:268: InterfaceError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"insert_assert_add_to_builtins","time":{"start":1759509639133,"stop":1759509639134,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759509639134,"stop":1759509639134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session","time":{"start":1759509639134,"stop":1759509639134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail","time":{"start":1759509645054,"stop":1759509645054,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"disable_cache","time":{"start":1759509645055,"stop":1759509645055,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1759509645055,"stop":1759509645055,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1759509645055,"stop":1759509645057,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_name","time":{"start":1759509645057,"stop":1759509645057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1759509645057,"stop":1759509645057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1759509645057,"stop":1759509645057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"db_name","time":{"start":1759509645057,"stop":1759509645058,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1759509645058,"stop":1759509645058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_description","time":{"start":1759509645058,"stop":1759509645058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1759509645058,"stop":1759509645058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_callback","time":{"start":1759509645058,"stop":1759509645058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1759509645058,"stop":1759509645058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_data","time":{"start":1759509645059,"stop":1759509645059,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_url","time":{"start":1759509645059,"stop":1759509645059,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_statistics","time":{"start":1759509645059,"stop":1759509645059,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_url","time":{"start":1759509645059,"stop":1759509645059,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_callback","time":{"start":1759509645059,"stop":1759509645059,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_id","time":{"start":1759509645060,"stop":1759509645060,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_engine_url_by_id_callback","time":{"start":1759509645060,"stop":1759509645060,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_engine_url_by_id_url","time":{"start":1759509645060,"stop":1759509645060,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_url","time":{"start":1759509645060,"stop":1759509645060,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_callback","time":{"start":1759509645060,"stop":1759509645060,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id","time":{"start":1759509645060,"stop":1759509645060,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"python_query_data","time":{"start":1759509645061,"stop":1759509645061,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1759509654662,"stop":1759509654662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"httpx_mock::0","time":{"start":1759509645361,"stop":1759509645361,"duration":0},"status":"failed","statusMessage":"AssertionError: The following responses are mocked but not requested:\n  - Match any request on https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database\n  - Match any request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id\n  - Match any request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines:getIdByName?engine_name=mock_engine_name\n  \n  If this is on purpose, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-more-responses-than-what-will-be-requested\nassert not [<pytest_httpx._request_matcher._RequestMatcher object at 0x7f5614efb280>, <pytest_httpx._request_matcher._RequestMatcher object at 0x7f5614efb5b0>, <pytest_httpx._request_matcher._RequestMatcher object at 0x7f56150d2cd0>]\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 231, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 938, in _teardown_yield_fixture\n    next(it)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py\", line 67, in httpx_mock\n    mock._assert_options()\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py\", line 319, in _assert_options\n    assert not callbacks_not_executed, (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"monkeypatch::0","time":{"start":1759509645361,"stop":1759509645362,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1759509645363,"stop":1759509645364,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail::0","time":{"start":1759509645365,"stop":1759509645365,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session::0","time":{"start":1759509700684,"stop":1759509700684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.db"},{"name":"suite","value":"test_connection"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2490-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.db.test_connection"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8cf0eca608d74ac6.json","parameterValues":[]}