{"uid":"39e1bdf745785995","name":"test_engine_start_stop","fullName":"tests.unit.V1.service.test_engine#test_engine_start_stop","historyId":"b13982428c7868b6fa73f9ecf4fe874c","time":{"start":1759509652827,"stop":1759509652853,"duration":26},"status":"broken","statusMessage":"httpx.TimeoutException: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\n- Match any request on https://api-dev.mock.firebolt.io/compute/v1/providers\n- Match GET request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1\n- Match POST request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1:start\n- Match POST request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1:stop\n- Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\n- Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\n\nIf you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f5614f9ff40>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f5614c301f0>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nprovider_callback = <function provider_callback.<locals>.do_mock at 0x7f5614fd8af0>\nprovider_url = 'https://api-dev.mock.firebolt.io/compute/v1/providers'\nsettings = Settings(auth=<firebolt.client.auth.username_password.UsernamePassword object at 0x7f561533e740>, account_name='mock_account_name', server='api-dev.mock.firebolt.io', default_region='mock_region_1')\nmock_engine = Engine(name='my_engine', compute_region_key=RegionKey(provider_id='pid', region_id='rid'), settings=EngineSettings(pre...ast_update_actor=None, last_use_time=None, desired_status=None, health_status=None, endpoint_desired_revision_key=None)\naccount_id_callback = <function account_id_callback.<locals>.do_mock at 0x7f5614fd89d0>\naccount_id_url = re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\nengine_callback = <function engine_callback.<locals>.do_mock at 0x7f5614fd8940>\naccount_engine_url = 'https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1'\n\n    def test_engine_start_stop(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        provider_callback: Callable,\n        provider_url: str,\n        settings: Settings,\n        mock_engine: Engine,\n        account_id_callback: Callable,\n        account_id_url: Pattern,\n        engine_callback: Callable,\n        account_engine_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        httpx_mock.add_callback(provider_callback, url=provider_url)\n        httpx_mock.add_callback(account_id_callback, url=account_id_url)\n    \n        httpx_mock.add_callback(engine_callback, url=f\"{account_engine_url}\", method=\"GET\")\n        httpx_mock.add_callback(\n            engine_callback, url=f\"{account_engine_url}:start\", method=\"POST\"\n        )\n        httpx_mock.add_callback(\n            engine_callback, url=f\"{account_engine_url}:stop\", method=\"POST\"\n        )\n    \n>       manager = ResourceManager(settings=settings)\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/service/test_engine.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/service/manager.py:134: in __init__\n    self._init_services_v1()\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/service/manager.py:158: in _init_services_v1\n    self.provider_id = get_provider_id(client=self._client)\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/service/V1/provider.py:8: in get_provider_id\n    response = client.get(url=PROVIDERS_URL)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1053: in get\n    return self.request(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:825: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:123: in _send_handling_redirects\n    return super()._send_handling_redirects(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py:40: in mocked_handle_request\n    return mock._handle_request(transport, request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:163: in _handle_request\n    self._request_not_matched(real_transport, request)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f5614f9ff40>\nreal_transport = <firebolt.client.http_backend.KeepaliveTransport object at 0x7f5617cd02b0>\nrequest = <AuthRequest('POST', 'https://api-dev.mock.firebolt.io/auth/v1/login')>\n\n    def _request_not_matched(\n        self,\n        real_transport: Union[httpx.AsyncHTTPTransport, httpx.HTTPTransport],\n        request: httpx.Request,\n    ) -> NoReturn:\n        self._requests_not_matched.append(request)\n>       raise httpx.TimeoutException(\n            self._explain_that_no_response_was_found(real_transport, request),\n            request=request,\n        )\nE       httpx.TimeoutException: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\nE       - Match any request on https://api-dev.mock.firebolt.io/compute/v1/providers\nE       - Match GET request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1\nE       - Match POST request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1:start\nE       - Match POST request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1:stop\nE       - Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\nE       - Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\nE       \nE       If you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:191: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"insert_assert_add_to_builtins","time":{"start":1759509639133,"stop":1759509639134,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759509639134,"stop":1759509639134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session","time":{"start":1759509639134,"stop":1759509639134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail","time":{"start":1759509652793,"stop":1759509652793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1759509652793,"stop":1759509652794,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1759509652794,"stop":1759509652796,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"disable_cache","time":{"start":1759509652794,"stop":1759509652794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1759509652796,"stop":1759509652796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1759509652796,"stop":1759509652796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"provider_url","time":{"start":1759509652797,"stop":1759509652797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_callback","time":{"start":1759509652797,"stop":1759509652797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1759509652797,"stop":1759509652797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1759509652797,"stop":1759509652797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"provider","time":{"start":1759509652797,"stop":1759509652797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"region_string","time":{"start":1759509652798,"stop":1759509652798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"mock_providers","time":{"start":1759509652798,"stop":1759509652798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"password","time":{"start":1759509652798,"stop":1759509652798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_password_auth","time":{"start":1759509652798,"stop":1759509652824,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"provider_callback","time":{"start":1759509652798,"stop":1759509652798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user","time":{"start":1759509652798,"stop":1759509652798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_name","time":{"start":1759509652824,"stop":1759509652825,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1759509652824,"stop":1759509652824,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"settings","time":{"start":1759509652824,"stop":1759509652824,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_callback","time":{"start":1759509652825,"stop":1759509652826,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id","time":{"start":1759509652825,"stop":1759509652825,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_settings","time":{"start":1759509652825,"stop":1759509652825,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"region_key","time":{"start":1759509652825,"stop":1759509652825,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"mock_engine","time":{"start":1759509652825,"stop":1759509652825,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_url","time":{"start":1759509652826,"stop":1759509652826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_url","time":{"start":1759509652826,"stop":1759509652826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_callback","time":{"start":1759509652826,"stop":1759509652826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_engine_url","time":{"start":1759509652826,"stop":1759509652826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_name","time":{"start":1759509654662,"stop":1759509654662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1759509654662,"stop":1759509654662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_url","time":{"start":1759509654665,"stop":1759509654665,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_callback","time":{"start":1759509671413,"stop":1759509671414,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.TimeoutException: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\n- Match any request on https://api-dev.mock.firebolt.io/compute/v1/providers\n- Match GET request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1\n- Match POST request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1:start\n- Match POST request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1:stop\n- Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\n- Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\n\nIf you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f5614f9ff40>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f5614c301f0>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nprovider_callback = <function provider_callback.<locals>.do_mock at 0x7f5614fd8af0>\nprovider_url = 'https://api-dev.mock.firebolt.io/compute/v1/providers'\nsettings = Settings(auth=<firebolt.client.auth.username_password.UsernamePassword object at 0x7f561533e740>, account_name='mock_account_name', server='api-dev.mock.firebolt.io', default_region='mock_region_1')\nmock_engine = Engine(name='my_engine', compute_region_key=RegionKey(provider_id='pid', region_id='rid'), settings=EngineSettings(pre...ast_update_actor=None, last_use_time=None, desired_status=None, health_status=None, endpoint_desired_revision_key=None)\naccount_id_callback = <function account_id_callback.<locals>.do_mock at 0x7f5614fd89d0>\naccount_id_url = re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\nengine_callback = <function engine_callback.<locals>.do_mock at 0x7f5614fd8940>\naccount_engine_url = 'https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1'\n\n    def test_engine_start_stop(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        provider_callback: Callable,\n        provider_url: str,\n        settings: Settings,\n        mock_engine: Engine,\n        account_id_callback: Callable,\n        account_id_url: Pattern,\n        engine_callback: Callable,\n        account_engine_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        httpx_mock.add_callback(provider_callback, url=provider_url)\n        httpx_mock.add_callback(account_id_callback, url=account_id_url)\n    \n        httpx_mock.add_callback(engine_callback, url=f\"{account_engine_url}\", method=\"GET\")\n        httpx_mock.add_callback(\n            engine_callback, url=f\"{account_engine_url}:start\", method=\"POST\"\n        )\n        httpx_mock.add_callback(\n            engine_callback, url=f\"{account_engine_url}:stop\", method=\"POST\"\n        )\n    \n>       manager = ResourceManager(settings=settings)\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/service/test_engine.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/service/manager.py:134: in __init__\n    self._init_services_v1()\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/service/manager.py:158: in _init_services_v1\n    self.provider_id = get_provider_id(client=self._client)\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/service/V1/provider.py:8: in get_provider_id\n    response = client.get(url=PROVIDERS_URL)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1053: in get\n    return self.request(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:825: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:914: in send\n    response = self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:942: in _send_handling_auth\n    response = self._send_handling_redirects(\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:123: in _send_handling_redirects\n    return super()._send_handling_redirects(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:979: in _send_handling_redirects\n    response = self._send_single_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1014: in _send_single_request\n    response = transport.handle_request(request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py:40: in mocked_handle_request\n    return mock._handle_request(transport, request)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:163: in _handle_request\n    self._request_not_matched(real_transport, request)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f5614f9ff40>\nreal_transport = <firebolt.client.http_backend.KeepaliveTransport object at 0x7f5617cd02b0>\nrequest = <AuthRequest('POST', 'https://api-dev.mock.firebolt.io/auth/v1/login')>\n\n    def _request_not_matched(\n        self,\n        real_transport: Union[httpx.AsyncHTTPTransport, httpx.HTTPTransport],\n        request: httpx.Request,\n    ) -> NoReturn:\n        self._requests_not_matched.append(request)\n>       raise httpx.TimeoutException(\n            self._explain_that_no_response_was_found(real_transport, request),\n            request=request,\n        )\nE       httpx.TimeoutException: No response can be found for POST request on https://api-dev.mock.firebolt.io/auth/v1/login amongst:\nE       - Match any request on https://api-dev.mock.firebolt.io/compute/v1/providers\nE       - Match GET request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1\nE       - Match POST request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1:start\nE       - Match POST request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1:stop\nE       - Already matched any request on https://api-dev.mock.firebolt.io/auth/v1/login\nE       - Already matched any request on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\nE       \nE       If you wanted to reuse an already matched response instead of registering it again, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-a-response-for-more-than-one-request\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py:191: TimeoutException","steps":[],"attachments":[{"uid":"c3702cb50f34503","name":"log","source":"c3702cb50f34503.txt","type":"text/plain","size":246}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"httpx_mock::0","time":{"start":1759509653047,"stop":1759509653047,"duration":0},"status":"failed","statusMessage":"AssertionError: The following responses are mocked but not requested:\n  - Match any request on https://api-dev.mock.firebolt.io/compute/v1/providers\n  - Match GET request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1\n  - Match POST request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1:start\n  - Match POST request on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id_1:stop\n  \n  If this is on purpose, refer to https://github.com/Colin-b/pytest_httpx/blob/master/README.md#allow-to-register-more-responses-than-what-will-be-requested\nassert not [<pytest_httpx._request_matcher._RequestMatcher object at 0x7f5617cd0940>, <pytest_httpx._request_matcher._RequestMatc...er._RequestMatcher object at 0x7f5617cd03d0>, <pytest_httpx._request_matcher._RequestMatcher object at 0x7f5617cd0910>]\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 231, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 938, in _teardown_yield_fixture\n    next(it)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py\", line 67, in httpx_mock\n    mock._assert_options()\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py\", line 319, in _assert_options\n    assert not callbacks_not_executed, (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1759509653048,"stop":1759509653049,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch::0","time":{"start":1759509653048,"stop":1759509653048,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail::0","time":{"start":1759509653050,"stop":1759509653050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session::0","time":{"start":1759509700684,"stop":1759509700684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.service"},{"name":"suite","value":"test_engine"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2490-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.service.test_engine"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"39e1bdf745785995.json","parameterValues":[]}