{"uid":"7f76e547390ff177","name":"test_auth_error_handling","fullName":"tests.unit.client.auth.test_request_auth#test_auth_error_handling","historyId":"53a96dc2745e0f628db64578d1be57df","time":{"start":1759509670640,"stop":1759509670673,"duration":33},"description":"Auth handles various errors properly.","descriptionHtml":"<p>Auth handles various errors properly.</p>\n","status":"broken","statusMessage":"TypeError: reset() takes 1 positional argument but 2 were given","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f5614b68220>\nclient_id = 'client_id', client_secret = 'client_secret'\n\n    def test_auth_error_handling(httpx_mock: HTTPXMock, client_id: str, client_secret: str):\n        \"\"\"Auth handles various errors properly.\"\"\"\n        for api_endpoint in (\"https://host\", \"host\"):\n            auth = ClientCredentials(client_id, client_secret, use_token_cache=False)\n    \n            # Internal httpx error\n            def http_error(*args, **kwargs):\n                raise StreamError(\"httpx\")\n    \n            httpx_mock.add_callback(http_error)\n            with pytest.raises(StreamError) as excinfo:\n                execute_generator_requests(auth.get_new_token_generator(), api_endpoint)\n    \n            assert str(excinfo.value) == \"httpx\", \"Invalid authentication error message\"\n>           httpx_mock.reset(True)\nE           TypeError: reset() takes 1 positional argument but 2 were given\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/client/auth/test_request_auth.py:45: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"insert_assert_add_to_builtins","time":{"start":1759509639133,"stop":1759509639134,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1759509639134,"stop":1759509639134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session","time":{"start":1759509639134,"stop":1759509639134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail","time":{"start":1759509670636,"stop":1759509670637,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1759509670637,"stop":1759509670639,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1759509670637,"stop":1759509670637,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"disable_cache","time":{"start":1759509670637,"stop":1759509670637,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1759509670639,"stop":1759509670639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1759509670639,"stop":1759509670639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client_secret","time":{"start":1759509670640,"stop":1759509670640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client_id","time":{"start":1759509670640,"stop":1759509670640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"httpx_mock::0","time":{"start":1759509670680,"stop":1759509670680,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch::0","time":{"start":1759509670680,"stop":1759509670680,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1759509670681,"stop":1759509670681,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_maybe_fail::0","time":{"start":1759509670682,"stop":1759509670682,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_assert_session::0","time":{"start":1759509700684,"stop":1759509700684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.client.auth"},{"name":"suite","value":"test_request_auth"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2490-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.client.auth.test_request_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7f76e547390ff177.json","parameterValues":[]}