{"uid":"f67c386e997353e3","name":"test_rm_token_cache","fullName":"tests.unit.V1.service.test_resource_manager#test_rm_token_cache","historyId":"0d78619d0d5350194c6e61a9a793d45d","time":{"start":1755863739280,"stop":1755863739397,"duration":117},"description":"Credentials, that are passed to rm are processed properly.","descriptionHtml":"<p>Credentials, that are passed to rm are processed properly.</p>\n","status":"failed","statusMessage":"AssertionError: Invalid token value cached\nassert None == 'mock_access_token'\n +  where None = <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>>()\n +    where <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>> = <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>.get_cached_token","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7fd205b943a0>\ncheck_token_callback = <function check_token_callback.<locals>.check_token at 0x7fd205a7a040>\ncheck_credentials_callback = <function check_credentials_callback.<locals>.check_credentials at 0x7fd205a7af70>\nsettings = Settings(auth=<firebolt.client.auth.username_password.UsernamePassword object at 0x7fd205ce53c0>, account_name='mock_account_name', server='api-dev.mock.firebolt.io', default_region='mock_region_1')\nuser = 'mock_user', password = 'mock_password'\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nprovider_callback = <function provider_callback.<locals>.do_mock at 0x7fd205d73ee0>\nprovider_url = 'https://api-dev.mock.firebolt.io/compute/v1/providers'\naccount_id_url = re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\naccount_id_callback = <function account_id_callback.<locals>.do_mock at 0x7fd205d73160>\naccess_token = 'mock_access_token'\n\n    @mark.nofakefs\n    def test_rm_token_cache(\n        httpx_mock: HTTPXMock,\n        check_token_callback: Callable,\n        check_credentials_callback: Callable,\n        settings: Settings,\n        user: str,\n        password: str,\n        auth_url: str,\n        provider_callback: Callable,\n        provider_url: str,\n        account_id_url: Pattern,\n        account_id_callback: Callable,\n        access_token: str,\n    ) -> None:\n        \"\"\"Credentials, that are passed to rm are processed properly.\"\"\"\n        url = \"https://url\"\n    \n        httpx_mock.add_callback(check_credentials_callback, url=auth_url)\n        httpx_mock.add_callback(provider_callback, url=provider_url)\n        httpx_mock.add_callback(check_token_callback, url=url)\n        httpx_mock.add_callback(account_id_callback, url=account_id_url)\n    \n        with Patcher():\n            local_settings = Settings(\n                auth=UsernamePassword(user, password, use_token_cache=True),\n                server=settings.server,\n                default_region=settings.default_region,\n            )\n            rm = ResourceManager(local_settings)\n            rm._client.get(url)\n    \n            ts = TokenSecureStorage(user, password)\n>           assert ts.get_cached_token() == access_token, \"Invalid token value cached\"\nE           AssertionError: Invalid token value cached\nE           assert None == 'mock_access_token'\nE            +  where None = <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>>()\nE            +    where <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>> = <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>.get_cached_token\n\ntests/unit/V1/service/test_resource_manager.py:92: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clear_cache","time":{"start":1755863739271,"stop":1755863739271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1755863739271,"stop":1755863739271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"disable_cache","time":{"start":1755863739271,"stop":1755863739271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"assert_all_responses_were_requested","time":{"start":1755863739272,"stop":1755863739272,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"non_mocked_hosts","time":{"start":1755863739272,"stop":1755863739272,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"check_token_callback","time":{"start":1755863739272,"stop":1755863739272,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"access_token","time":{"start":1755863739272,"stop":1755863739272,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1755863739272,"stop":1755863739272,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1755863739272,"stop":1755863739272,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1755863739273,"stop":1755863739273,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"region_string","time":{"start":1755863739273,"stop":1755863739273,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"check_credentials_callback","time":{"start":1755863739273,"stop":1755863739273,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"password","time":{"start":1755863739273,"stop":1755863739273,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_password_auth","time":{"start":1755863739273,"stop":1755863739277,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user","time":{"start":1755863739273,"stop":1755863739273,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1755863739277,"stop":1755863739278,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"settings","time":{"start":1755863739278,"stop":1755863739278,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"provider_url","time":{"start":1755863739278,"stop":1755863739278,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1755863739278,"stop":1755863739278,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"provider","time":{"start":1755863739278,"stop":1755863739278,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id","time":{"start":1755863739279,"stop":1755863739279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"provider_callback","time":{"start":1755863739279,"stop":1755863739279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"mock_providers","time":{"start":1755863739279,"stop":1755863739279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_callback","time":{"start":1755863739279,"stop":1755863739279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_url","time":{"start":1755863739279,"stop":1755863739279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1755863739537,"stop":1755863739537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"check_credentials_callback","time":{"start":1755863739538,"stop":1755863739538,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Credentials, that are passed to rm are processed properly.","status":"failed","statusMessage":"AssertionError: Invalid token value cached\nassert None == 'mock_access_token'\n +  where None = <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>>()\n +    where <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>> = <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>.get_cached_token","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7fd205b943a0>\ncheck_token_callback = <function check_token_callback.<locals>.check_token at 0x7fd205a7a040>\ncheck_credentials_callback = <function check_credentials_callback.<locals>.check_credentials at 0x7fd205a7af70>\nsettings = Settings(auth=<firebolt.client.auth.username_password.UsernamePassword object at 0x7fd205ce53c0>, account_name='mock_account_name', server='api-dev.mock.firebolt.io', default_region='mock_region_1')\nuser = 'mock_user', password = 'mock_password'\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nprovider_callback = <function provider_callback.<locals>.do_mock at 0x7fd205d73ee0>\nprovider_url = 'https://api-dev.mock.firebolt.io/compute/v1/providers'\naccount_id_url = re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\naccount_id_callback = <function account_id_callback.<locals>.do_mock at 0x7fd205d73160>\naccess_token = 'mock_access_token'\n\n    @mark.nofakefs\n    def test_rm_token_cache(\n        httpx_mock: HTTPXMock,\n        check_token_callback: Callable,\n        check_credentials_callback: Callable,\n        settings: Settings,\n        user: str,\n        password: str,\n        auth_url: str,\n        provider_callback: Callable,\n        provider_url: str,\n        account_id_url: Pattern,\n        account_id_callback: Callable,\n        access_token: str,\n    ) -> None:\n        \"\"\"Credentials, that are passed to rm are processed properly.\"\"\"\n        url = \"https://url\"\n    \n        httpx_mock.add_callback(check_credentials_callback, url=auth_url)\n        httpx_mock.add_callback(provider_callback, url=provider_url)\n        httpx_mock.add_callback(check_token_callback, url=url)\n        httpx_mock.add_callback(account_id_callback, url=account_id_url)\n    \n        with Patcher():\n            local_settings = Settings(\n                auth=UsernamePassword(user, password, use_token_cache=True),\n                server=settings.server,\n                default_region=settings.default_region,\n            )\n            rm = ResourceManager(local_settings)\n            rm._client.get(url)\n    \n            ts = TokenSecureStorage(user, password)\n>           assert ts.get_cached_token() == access_token, \"Invalid token value cached\"\nE           AssertionError: Invalid token value cached\nE           assert None == 'mock_access_token'\nE            +  where None = <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>>()\nE            +    where <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>> = <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205bac670>.get_cached_token\n\ntests/unit/V1/service/test_resource_manager.py:92: AssertionError","steps":[],"attachments":[{"uid":"c7b253c0b5a2a38c","name":"log","source":"c7b253c0b5a2a38c.txt","type":"text/plain","size":246}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"httpx_mock::0","time":{"start":1755863739408,"stop":1755863739408,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch::0","time":{"start":1755863739409,"stop":1755863739409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1755863739410,"stop":1755863739410,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nofakefs"},{"name":"parentSuite","value":"tests.unit.V1.service"},{"name":"suite","value":"test_resource_manager"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2445-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.service.test_resource_manager"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["nofakefs"]},"source":"f67c386e997353e3.json","parameterValues":[]}