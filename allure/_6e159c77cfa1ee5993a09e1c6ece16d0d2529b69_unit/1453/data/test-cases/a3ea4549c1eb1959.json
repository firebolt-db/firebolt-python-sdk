{"uid":"a3ea4549c1eb1959","name":"test_refresh_with_hooks","fullName":"tests.unit.client.test_client#test_refresh_with_hooks","historyId":"410f105af888e53c258c259fc42a31b5","time":{"start":1755863754762,"stop":1755863754811,"duration":49},"description":"\n    When hooks are used, the invalid token, fetched from cache, is refreshed\n    ","descriptionHtml":"<pre><code>When hooks are used, the invalid token, fetched from cache, is refreshed\n</code></pre>\n","status":"broken","statusMessage":"firebolt.utils.exception.AuthorizationError: Authorization failed: Failed to connect to Firebolt. Could not authenticate with the given credentials. Please verify the provided credentials are up to date and correct and that you have the correct user permissions.","statusTrace":"self = <firebolt.client.auth.client_credentials.ClientCredentials object at 0x7fd205c61840>\n\n    def get_new_token_generator(self) -> Generator[Request, Response, None]:\n        \"\"\"Get new token using username and password.\n        Yields:\n            Request: An http request to get token. Expects Response to be sent back\n        Raises:\n            AuthenticationError: Error while authenticating with provided credentials\n        \"\"\"\n        try:\n            self.requires_response_body = True\n            response = yield self._make_auth_request()\n            self.requires_response_body = False\n>           response.raise_for_status()\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/auth/request_auth_base.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [401 Unauthorized]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://id.app.firebolt.io/oauth/token'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401\n\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_models.py:763: HTTPStatusError\n\nDuring handling of the above exception, another exception occurred:\n\nfs = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x7fd205d7eca0>\nhttpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7fd2064e3c70>\naccount_name = 'mock_account_name', client_id = 'client_id'\nclient_secret = 'client_secret', access_token = 'mock_access_token'\n\n    def test_refresh_with_hooks(\n        fs: FakeFilesystem,\n        httpx_mock: HTTPXMock,\n        account_name: str,\n        client_id: str,\n        client_secret: str,\n        access_token: str,\n    ) -> None:\n        \"\"\"\n        When hooks are used, the invalid token, fetched from cache, is refreshed\n        \"\"\"\n    \n        tss = TokenSecureStorage(client_id, client_secret)\n        tss.cache_token(access_token, 2**32)\n    \n        client = Client(\n            account_name=account_name,\n            auth=ClientCredentials(client_id, client_secret),\n            event_hooks={\n                \"response\": [raise_on_4xx_5xx],\n            },\n        )\n    \n        # client request failed authorization\n        httpx_mock.add_response(\n            status_code=codes.UNAUTHORIZED,\n        )\n    \n        # auth get another token\n        httpx_mock.add_response(\n            status_code=codes.OK,\n            json={\"expires_in\": 2**30, \"access_token\": access_token},\n        )\n    \n        # client request success this time\n        httpx_mock.add_response(\n            status_code=codes.OK,\n        )\n    \n>       assert (\n            client.get(\"https://url\").status_code == codes.OK\n        ), \"request failed with firebolt client\"\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/client/test_client.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:1066: in get\n    return self.request(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:837: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:926: in send\n    response = self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:972: in _send_handling_auth\n    raise exc\n/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/httpx/_client.py:961: in _send_handling_auth\n    next_request = auth_flow.send(response)\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/auth/base.py:247: in sync_auth_flow\n    request = flow.send(response)\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/auth/base.py:170: in auth_flow\n    yield from self.get_new_token_generator()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <firebolt.client.auth.client_credentials.ClientCredentials object at 0x7fd205c61840>\n\n    def get_new_token_generator(self) -> Generator[Request, Response, None]:\n        \"\"\"Get new token using username and password.\n        Yields:\n            Request: An http request to get token. Expects Response to be sent back\n        Raises:\n            AuthenticationError: Error while authenticating with provided credentials\n        \"\"\"\n        try:\n            self.requires_response_body = True\n            response = yield self._make_auth_request()\n            self.requires_response_body = False\n            response.raise_for_status()\n    \n            parsed = response.json()\n            self._check_response_error(parsed)\n    \n            self._token = parsed[\"access_token\"]\n            self._expires = int(time()) + int(parsed[\"expires_in\"])\n    \n        except _REQUEST_ERRORS as e:\n            if e.response.status_code == codes.UNAUTHORIZED:\n>               raise AuthorizationError()\nE               firebolt.utils.exception.AuthorizationError: Authorization failed: Failed to connect to Firebolt. Could not authenticate with the given credentials. Please verify the provided credentials are up to date and correct and that you have the correct user permissions.\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/auth/request_auth_base.py:61: AuthorizationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"disable_cache","time":{"start":1755863754757,"stop":1755863754757,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1755863754757,"stop":1755863754757,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1755863754757,"stop":1755863754760,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"non_mocked_hosts","time":{"start":1755863754760,"stop":1755863754760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1755863754760,"stop":1755863754760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fs","time":{"start":1755863754760,"stop":1755863754760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1755863754760,"stop":1755863754761,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"assert_all_responses_were_requested","time":{"start":1755863754760,"stop":1755863754760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client_secret","time":{"start":1755863754761,"stop":1755863754761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1755863754761,"stop":1755863754761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"access_token","time":{"start":1755863754761,"stop":1755863754761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client_id","time":{"start":1755863754761,"stop":1755863754761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"httpx_mock::0","time":{"start":1755863754997,"stop":1755863754997,"duration":0},"status":"failed","statusMessage":"AssertionError: The following responses are mocked but not requested:\n  Match all requests\n  Match all requests\nassert not [<pytest_httpx._request_matcher._RequestMatcher object at 0x7fd205adba60>, <pytest_httpx._request_matcher._RequestMatcher object at 0x7fd205d32850>]\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 231, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/_pytest/fixtures.py\", line 916, in _teardown_yield_fixture\n    next(it)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/__init__.py\", line 76, in httpx_mock\n    mock.reset(assert_all_responses_were_requested)\n  File \"/opt/hostedtoolcache/Python/3.9.23/x64/lib/python3.9/site-packages/pytest_httpx/_httpx_mock.py\", line 257, in reset\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"monkeypatch::0","time":{"start":1755863754999,"stop":1755863754999,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fs::0","time":{"start":1755863754999,"stop":1755863754999,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1755863755000,"stop":1755863755001,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.client"},{"name":"suite","value":"test_client"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2445-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.client.test_client"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a3ea4549c1eb1959.json","parameterValues":[]}