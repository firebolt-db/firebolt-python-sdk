{"uid":"7febbb75185ba3c5","name":"test_connection_token_caching","fullName":"tests.unit.V1.db.test_connection#test_connection_token_caching","historyId":"3aad784725fd63be37b1bf37f482da57","time":{"start":1755863735994,"stop":1755863736141,"duration":147},"status":"failed","statusMessage":"AssertionError: Invalid token value cached\nassert None == 'mock_access_token'\n +  where None = <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205e82280>>()\n +    where <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205e82280>> = <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205e82280>.get_cached_token","statusTrace":"engine_url = 'mock_engine_name.mock.firebolt.io'\napi_endpoint = 'api-dev.mock.firebolt.io', account_name = 'mock_account_name'\nuser = 'mock_user', password = 'mock_password', db_name = 'database'\nhttpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7fd205c7dd00>\ncheck_credentials_callback = <function check_credentials_callback.<locals>.check_credentials at 0x7fd205d56160>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nquery_callback = <function query_callback.<locals>.do_query at 0x7fd205f345e0>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\npython_query_data = [[0, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], [1, 256, 70000, -32768, 922337203685477580, -9...337203685477580, -922337203685477580, ...], [5, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], ...]\naccess_token = 'mock_access_token'\naccount_id_callback = <function account_id_callback.<locals>.do_mock at 0x7fd205f34790>\naccount_id_url = re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/accounts:getIdByName\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\n\n    @mark.nofakefs\n    def test_connection_token_caching(\n        engine_url: str,\n        api_endpoint: str,\n        account_name: str,\n        user: str,\n        password: str,\n        db_name: str,\n        httpx_mock: HTTPXMock,\n        check_credentials_callback: Callable,\n        auth_url: str,\n        query_callback: Callable,\n        query_url: str,\n        python_query_data: List[List[ColType]],\n        access_token: str,\n        account_id_callback: Callable,\n        account_id_url: str,\n    ) -> None:\n        httpx_mock.add_callback(check_credentials_callback, url=auth_url)\n        httpx_mock.add_callback(query_callback, url=query_url)\n        httpx_mock.add_callback(account_id_callback, url=account_id_url)\n    \n        with Patcher():\n            with connect(\n                database=db_name,\n                auth=UsernamePassword(user, password, use_token_cache=True),\n                engine_url=engine_url,\n                account_name=account_name,\n                api_endpoint=api_endpoint,\n            ) as connection:\n                assert connection.cursor().execute(\"select*\") == len(python_query_data)\n            ts = TokenSecureStorage(username=user, password=password)\n>           assert ts.get_cached_token() == access_token, \"Invalid token value cached\"\nE           AssertionError: Invalid token value cached\nE           assert None == 'mock_access_token'\nE            +  where None = <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205e82280>>()\nE            +    where <bound method TokenSecureStorage.get_cached_token of <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205e82280>> = <firebolt.utils.token_storage.TokenSecureStorage object at 0x7fd205e82280>.get_cached_token\n\ntests/unit/V1/db/test_connection.py:266: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"global_fake_fs","time":{"start":1755863735989,"stop":1755863735989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_url","time":{"start":1755863735989,"stop":1755863735989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_name","time":{"start":1755863735989,"stop":1755863735989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"disable_cache","time":{"start":1755863735989,"stop":1755863735989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1755863735989,"stop":1755863735990,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1755863735989,"stop":1755863735989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1755863735990,"stop":1755863735990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"password","time":{"start":1755863735990,"stop":1755863735990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1755863735990,"stop":1755863735990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"assert_all_responses_were_requested","time":{"start":1755863735990,"stop":1755863735990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"db_name","time":{"start":1755863735990,"stop":1755863735990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user","time":{"start":1755863735990,"stop":1755863735990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"access_token","time":{"start":1755863735991,"stop":1755863735991,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1755863735991,"stop":1755863735991,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1755863735991,"stop":1755863735991,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"check_credentials_callback","time":{"start":1755863735991,"stop":1755863735991,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"non_mocked_hosts","time":{"start":1755863735991,"stop":1755863735991,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_url","time":{"start":1755863735992,"stop":1755863735992,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_callback","time":{"start":1755863735992,"stop":1755863735992,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_statistics","time":{"start":1755863735992,"stop":1755863735992,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_data","time":{"start":1755863735992,"stop":1755863735992,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_description","time":{"start":1755863735992,"stop":1755863735992,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_callback","time":{"start":1755863735993,"stop":1755863735993,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"python_query_data","time":{"start":1755863735993,"stop":1755863735993,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_url","time":{"start":1755863735993,"stop":1755863735993,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id","time":{"start":1755863735993,"stop":1755863735993,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1755863739537,"stop":1755863739537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"check_credentials_callback","time":{"start":1755863739538,"stop":1755863739538,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"httpx_mock::0","time":{"start":1755863736154,"stop":1755863736154,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch::0","time":{"start":1755863736155,"stop":1755863736155,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1755863736158,"stop":1755863736158,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nofakefs"},{"name":"parentSuite","value":"tests.unit.V1.db"},{"name":"suite","value":"test_connection"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2445-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.db.test_connection"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["nofakefs"]},"source":"7febbb75185ba3c5.json","parameterValues":[]}