{"uid":"a57bfd2e12c4ea0a","name":"test_cursor_execute","fullName":"tests.unit.V1.db.test_cursor#test_cursor_execute","historyId":"47fa637b923d3481a9611d6cbde00117","time":{"start":1744184348066,"stop":1744184348073,"duration":7},"description":"Cursor is able to execute query, all fields are populated properly.","descriptionHtml":"<p>Cursor is able to execute query, all fields are populated properly.</p>\n","status":"failed","statusMessage":"AssertionError: Invalid description for insert using server-side synchronous execute().\nassert [] is None\n +  where [] = <firebolt.db.cursor.CursorV1 object at 0x7fe30539daf0>.description","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7fe304f396a0>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7fe3051cc9d0>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nquery_callback = <function query_callback.<locals>.do_query at 0x7fe30539d8b0>\ninsert_query_callback = <function insert_query_callback.<locals>.do_query at 0x7fe30539dd30>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7fe30539daf0>\npython_query_description = [Column(name='uint8', type_code=<class 'int'>, display_size=None, internal_size=None, precision=None, scale=None, null...int64', type_code=<class 'int'>, display_size=None, internal_size=None, precision=None, scale=None, null_ok=None), ...]\npython_query_data = [[0, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], [1, 256, 70000, -32768, 922337203685477580, -9...337203685477580, -922337203685477580, ...], [5, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], ...]\n\n    def test_cursor_execute(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        query_callback: Callable,\n        insert_query_callback: Callable,\n        query_url: str,\n        cursor: Cursor,\n        python_query_description: List[Column],\n        python_query_data: List[List[ColType]],\n    ):\n        \"\"\"Cursor is able to execute query, all fields are populated properly.\"\"\"\n    \n        for query, message in (\n            (\n                lambda: cursor.execute(\"select * from t\"),\n                \"server-side synchronous execute()\",\n            ),\n            (\n                lambda: cursor.executemany(\"select * from t\", []),\n                \"server-side synchronous executemany()\",\n            ),\n        ):\n            # Query with json output\n            httpx_mock.add_callback(auth_callback, url=auth_url)\n            httpx_mock.add_callback(query_callback, url=query_url)\n            assert query() == len(\n                python_query_data\n            ), f\"Invalid row count returned for {message}.\"\n            assert cursor.rowcount == len(\n                python_query_data\n            ), f\"Invalid rowcount value for {message}.\"\n            for i, (desc, exp) in enumerate(\n                zip(cursor.description, python_query_description)\n            ):\n                assert (\n                    desc == exp\n                ), f\"Invalid column description at position {i} for {message}.\"\n    \n            for i in range(cursor.rowcount):\n                assert (\n                    cursor.fetchone() == python_query_data[i]\n                ), f\"Invalid data row at position {i} for {message}.\"\n    \n            assert (\n                cursor.fetchone() is None\n            ), f\"Non-empty fetchone after all data received for {message}.\"\n    \n            httpx_mock.reset(True)\n    \n            # Query with empty output\n            httpx_mock.add_callback(auth_callback, url=auth_url)\n            httpx_mock.add_callback(insert_query_callback, url=query_url)\n            assert query() == -1, f\"Invalid row count for insert using {message}.\"\n            assert (\n                cursor.rowcount == -1\n            ), f\"Invalid rowcount value for insert using {message}.\"\n>           assert (\n                cursor.description is None\n            ), f\"Invalid description for insert using {message}.\"\nE           AssertionError: Invalid description for insert using server-side synchronous execute().\nE           assert [] is None\nE            +  where [] = <firebolt.db.cursor.CursorV1 object at 0x7fe30539daf0>.description\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:198: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"global_fake_fs","time":{"start":1744184347966,"stop":1744184347968,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1744184347966,"stop":1744184347966,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"non_mocked_hosts","time":{"start":1744184347969,"stop":1744184347969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1744184347969,"stop":1744184347969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"assert_all_responses_were_requested","time":{"start":1744184347969,"stop":1744184347969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1744184347970,"stop":1744184347970,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_description","time":{"start":1744184347970,"stop":1744184347970,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1744184347970,"stop":1744184347970,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_callback","time":{"start":1744184347970,"stop":1744184347970,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_data","time":{"start":1744184347970,"stop":1744184347971,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1744184347970,"stop":1744184347970,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_name","time":{"start":1744184347971,"stop":1744184347971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_callback","time":{"start":1744184347971,"stop":1744184347971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"insert_query_callback","time":{"start":1744184347971,"stop":1744184347971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"db_name","time":{"start":1744184347971,"stop":1744184347971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_statistics","time":{"start":1744184347971,"stop":1744184347971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_url","time":{"start":1744184347971,"stop":1744184347971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"password","time":{"start":1744184347972,"stop":1744184347972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"username_password_auth","time":{"start":1744184347972,"stop":1744184348005,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user","time":{"start":1744184347972,"stop":1744184347972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_url","time":{"start":1744184347972,"stop":1744184347972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connection","time":{"start":1744184348005,"stop":1744184348064,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"python_query_description","time":{"start":1744184348064,"stop":1744184348065,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"cursor","time":{"start":1744184348064,"stop":1744184348064,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"python_query_data","time":{"start":1744184348065,"stop":1744184348065,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1744184351447,"stop":1744184351447,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"connection::0","time":{"start":1744184348097,"stop":1744184348097,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock::0","time":{"start":1744184348103,"stop":1744184348103,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch::0","time":{"start":1744184348104,"stop":1744184348104,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1744184348105,"stop":1744184348105,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.db"},{"name":"suite","value":"test_cursor"},{"name":"host","value":"fv-az1690-414"},{"name":"thread","value":"2334-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.db.test_cursor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a57bfd2e12c4ea0a.json","parameterValues":[]}