{"uid":"861038309598617f","name":"test_multi_thread_connection_sharing","fullName":"tests.integration.dbapi.sync.V2.test_queries#test_multi_thread_connection_sharing","historyId":"9dd35cb28be72e41ec9382d2424a60ee","time":{"start":1718783735193,"stop":1718783735620,"duration":427},"description":"\n    Test to verify sharing the same connection between different\n    threads works. With asyncio synching an async function this used\n    to fail due to a different loop having exclusive rights to the\n    Httpx client. Trio fixes this issue.\n    ","descriptionHtml":"<pre><code>Test to verify sharing the same connection between different\nthreads works. With asyncio synching an async function this used\nto fail due to a different loop having exclusive rights to the\nHttpx client. Trio fixes this issue.\n</code></pre>\n","status":"broken","statusMessage":"firebolt.utils.exception.OperationalError: Error executing query:\nDatabase 'integration_testing__1718783690531' does not exist or not authorized.","statusTrace":"engine_name = 'integration_testing__1718783690531'\ndatabase_name = 'integration_testing__1718783690531'\nauth = <firebolt.client.auth.client_credentials.ClientCredentials object at 0x7fb0bffd4940>\naccount_name = 'automation', api_endpoint = 'api.staging.firebolt.io'\n\n    @mark.xdist_group(\"multi_thread_connection_sharing\")\n    def test_multi_thread_connection_sharing(\n        engine_name: str,\n        database_name: str,\n        auth: Auth,\n        account_name: str,\n        api_endpoint: str,\n    ) -> None:\n        \"\"\"\n        Test to verify sharing the same connection between different\n        threads works. With asyncio synching an async function this used\n        to fail due to a different loop having exclusive rights to the\n        Httpx client. Trio fixes this issue.\n        \"\"\"\n    \n        exceptions = []\n    \n>       connection = connect(\n            auth=auth,\n            database=database_name,\n            account_name=account_name,\n            engine_name=engine_name,\n            api_endpoint=api_endpoint,\n        )\n\ntests/integration/dbapi/sync/V2/test_queries.py:385: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/firebolt/db/connection.py:57: in connect\n    return connect_v2(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/firebolt/db/connection.py:138: in connect_v2\n    cursor.execute(f'USE DATABASE \"{database}\"')\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/firebolt/common/base_cursor.py:122: in inner\n    return func(self, *args, **kwargs)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/firebolt/db/cursor.py:237: in execute\n    self._do_execute(query, params_list, skip_parsing)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/firebolt/db/cursor.py:186: in _do_execute\n    self._raise_if_error(resp)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <firebolt.db.cursor.CursorV2 object at 0x7fb0bef511a0>\nresp = <Response [500 Internal Server Error]>\n\n    def _raise_if_error(self, resp: Response) -> None:\n        \"\"\"Raise a proper error if any\"\"\"\n        if resp.status_code == codes.INTERNAL_SERVER_ERROR:\n>           raise OperationalError(\n                f\"Error executing query:\\n{resp.read().decode('utf-8')}\"\n            )\nE           firebolt.utils.exception.OperationalError: Error executing query:\nE           Database 'integration_testing__1718783690531' does not exist or not authorized.\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/firebolt/db/cursor.py:89: OperationalError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"engine_name","time":{"start":1718783731513,"stop":1718783731514,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"service_id","time":{"start":1718783731514,"stop":1718783731514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"service_secret","time":{"start":1718783731514,"stop":1718783731514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"database_name","time":{"start":1718783731514,"stop":1718783731514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth","time":{"start":1718783731514,"stop":1718783731629,"duration":115},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1718783731630,"stop":1718783731630,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1718783731630,"stop":1718783731630,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"xdist_group('multi_thread_connection_sharing')"},{"name":"parentSuite","value":"tests.integration.dbapi.sync.V2"},{"name":"suite","value":"test_queries"},{"name":"host","value":"fv-az1382-384"},{"name":"thread","value":"2192-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.dbapi.sync.V2.test_queries"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["xdist_group('multi_thread_connection_sharing')"]},"source":"861038309598617f.json","parameterValues":[]}