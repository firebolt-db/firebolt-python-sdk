{"uid":"eb009b8f2089cd9","name":"test_connect_engine_name","fullName":"tests.unit.V1.db.test_connection#test_connect_engine_name","historyId":"b29943756c7175a580b82a9f9b682f5f","time":{"start":1720198839080,"stop":1720198839285,"duration":205},"description":"connect properly handles engine_name","descriptionHtml":"<p>connect properly handles engine_name</p>\n","status":"broken","statusMessage":"httpx.TimeoutException: No response can be found for POST request on /?database=database&output_format=JSON_Compact amongst:\nMatch all requests on https://api-dev.mock.firebolt.io/auth/v1/login\nMatch all requests on https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database\nMatch all requests on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/web\\\\/v3\\\\/account\\\\/{account_name}\\\\/resolve\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\nMatch all requests on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id\nMatch all requests on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines:getIdByName?engine_name=mock_engine_name\nMatch all requests on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines:getIdByName?engine_name=mock_engine_name","statusTrace":"engine_name = 'mock_engine_name', api_endpoint = 'api-dev.mock.firebolt.io'\naccount_name = 'mock_account_name', db_name = 'database'\nhttpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7fee1bd0a8b0>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7fee1b93eca0>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\nquery_callback = <function query_callback.<locals>.do_query at 0x7fee1ba374c0>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\naccount_id_url = re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/web\\\\/v3\\\\/account\\\\/{account_name}\\\\/resolve\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\naccount_id_callback = <function account_id_callback.<locals>.do_mock at 0x7fee1bc9dca0>\nengine_id = 'mock_engine_id'\nget_engine_url_by_id_url = 'https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id'\nget_engine_url_by_id_callback = <function get_engine_url_by_id_callback.<locals>.do_mock at 0x7fee1b452dc0>\npython_query_data = [[0, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], [1, 256, 70000, -32768, 922337203685477580, -9...337203685477580, -922337203685477580, ...], [5, 256, 70000, -32768, 922337203685477580, -922337203685477580, ...], ...]\naccount_id = 'mock_account_id'\n\n    def test_connect_engine_name(\n        engine_name: str,\n        api_endpoint: str,\n        account_name: str,\n        db_name: str,\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        query_callback: Callable,\n        query_url: str,\n        account_id_url: Pattern,\n        account_id_callback: Callable,\n        engine_id: str,\n        get_engine_url_by_id_url: str,\n        get_engine_url_by_id_callback: Callable,\n        python_query_data: List[List[ColType]],\n        account_id: str,\n    ):\n        \"\"\"connect properly handles engine_name\"\"\"\n    \n        with raises(ConfigurationError):\n            connect(\n                engine_url=\"engine_url\",\n                engine_name=\"engine_name\",\n                database=\"db\",\n                auth=UsernamePassword(\"u\", \"p\"),\n            )\n    \n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        httpx_mock.add_callback(query_callback, url=query_url)\n        httpx_mock.add_callback(account_id_callback, url=account_id_url)\n        httpx_mock.add_callback(get_engine_url_by_id_callback, url=get_engine_url_by_id_url)\n    \n        # Mock engine id lookup error\n        httpx_mock.add_response(\n            url=f\"https://{api_endpoint}\"\n            + ACCOUNT_ENGINE_ID_BY_NAME_URL.format(account_id=account_id)\n            + f\"?engine_name={engine_name}\",\n            status_code=codes.NOT_FOUND,\n        )\n    \n        with raises(FireboltEngineError):\n            connect(\n                database=\"db\",\n                auth=UsernamePassword(\"u\", \"p\"),\n                engine_name=engine_name,\n                account_name=account_name,\n                api_endpoint=api_endpoint,\n            )\n    \n        # Mock engine id lookup by name\n        httpx_mock.add_response(\n            url=f\"https://{api_endpoint}\"\n            + ACCOUNT_ENGINE_ID_BY_NAME_URL.format(account_id=account_id)\n            + f\"?engine_name={engine_name}\",\n            status_code=codes.OK,\n            json={\"engine_id\": {\"engine_id\": engine_id}},\n        )\n    \n        with connect(\n            engine_name=engine_name,\n            database=db_name,\n            auth=UsernamePassword(\"u\", \"p\"),\n            account_name=account_name,\n            api_endpoint=api_endpoint,\n        ) as connection:\n>           assert connection.cursor().execute(\"select*\") == len(python_query_data)\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_connection.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/common/base_cursor.py:122: in inner\n    return func(self, *args, **kwargs)\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/db/cursor.py:237: in execute\n    self._do_execute(query, params_list, skip_parsing)\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/db/cursor.py:183: in _do_execute\n    resp = self._api_request(\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/db/cursor.py:400: in _api_request\n    return self._client.request(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/httpx/_client.py:814: in request\n    return self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/httpx/_client.py:901: in send\n    response = self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/httpx/_client.py:929: in _send_handling_auth\n    response = self._send_handling_redirects(\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/src/firebolt/client/client.py:135: in _send_handling_redirects\n    return super()._send_handling_redirects(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/httpx/_client.py:966: in _send_handling_redirects\n    response = self._send_single_request(request)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/httpx/_client.py:1002: in _send_single_request\n    response = transport.handle_request(request)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/pytest_httpx/_httpx_mock.py:326: in handle_request\n    return self.mock._handle_request(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7fee1bd0a8b0>\nrequest = <Request('POST', '/?database=database&output_format=JSON_Compact')>\n\n    def _handle_request(\n        self,\n        request: httpx.Request,\n    ) -> httpx.Response:\n        self._requests.append(request)\n    \n        callback = self._get_callback(request)\n        if callback:\n            response = callback(request)\n    \n            if response:\n                return _unread(response)\n    \n>       raise httpx.TimeoutException(\n            self._explain_that_no_response_was_found(request), request=request\n        )\nE       httpx.TimeoutException: No response can be found for POST request on /?database=database&output_format=JSON_Compact amongst:\nE       Match all requests on https://api-dev.mock.firebolt.io/auth/v1/login\nE       Match all requests on https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database\nE       Match all requests on re.compile('(?:https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/web\\\\/v3\\\\/account\\\\/{account_name}\\\\/resolve\\\\?account_name=.*|https:\\\\/\\\\/api-dev.mock.firebolt.io\\\\/iam\\\\/v2\\\\/account)')\nE       Match all requests on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines/mock_engine_id\nE       Match all requests on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines:getIdByName?engine_name=mock_engine_name\nE       Match all requests on https://api-dev.mock.firebolt.io/core/v1/accounts/mock_account_id/engines:getIdByName?engine_name=mock_engine_name\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/pytest_httpx/_httpx_mock.py:192: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clear_cache","time":{"start":1720198839073,"stop":1720198839073,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1720198839074,"stop":1720198839075,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_name","time":{"start":1720198839075,"stop":1720198839075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1720198839076,"stop":1720198839076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"assert_all_responses_were_requested","time":{"start":1720198839076,"stop":1720198839076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1720198839076,"stop":1720198839076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1720198839076,"stop":1720198839076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"non_mocked_hosts","time":{"start":1720198839076,"stop":1720198839076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"db_name","time":{"start":1720198839076,"stop":1720198839076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_data","time":{"start":1720198839077,"stop":1720198839078,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1720198839077,"stop":1720198839077,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_description","time":{"start":1720198839077,"stop":1720198839077,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_callback","time":{"start":1720198839077,"stop":1720198839077,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"httpx_mock","time":{"start":1720198839077,"stop":1720198839077,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_url","time":{"start":1720198839078,"stop":1720198839078,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_url","time":{"start":1720198839078,"stop":1720198839078,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_url","time":{"start":1720198839078,"stop":1720198839078,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_callback","time":{"start":1720198839078,"stop":1720198839078,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"query_statistics","time":{"start":1720198839078,"stop":1720198839078,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"engine_id","time":{"start":1720198839079,"stop":1720198839079,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_engine_url_by_id_callback","time":{"start":1720198839079,"stop":1720198839079,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_engine_url_by_id_url","time":{"start":1720198839079,"stop":1720198839079,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"python_query_data","time":{"start":1720198839079,"stop":1720198839079,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id","time":{"start":1720198839079,"stop":1720198839079,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_callback","time":{"start":1720198839079,"stop":1720198839079,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth_url","time":{"start":1720198847257,"stop":1720198847257,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_url","time":{"start":1720198847258,"stop":1720198847258,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_id_callback","time":{"start":1720198847259,"stop":1720198847259,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"httpx_mock::0","time":{"start":1720198839433,"stop":1720198839433,"duration":0},"status":"failed","statusMessage":"AssertionError: The following responses are mocked but not requested:\n  Match all requests on https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database\nassert not [<pytest_httpx._httpx_mock._RequestMatcher object at 0x7fee1bd0e640>]\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/fixtures.py\", line 916, in _teardown_yield_fixture\n    next(it)\n  File \"/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/pytest_httpx/__init__.py\", line 65, in httpx_mock\n    mock.reset(assert_all_responses_were_requested)\n  File \"/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/pytest_httpx/_httpx_mock.py\", line 309, in reset\n    assert (\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"monkeypatch::0","time":{"start":1720198839434,"stop":1720198839434,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs::0","time":{"start":1720198839436,"stop":1720198839437,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.db"},{"name":"suite","value":"test_connection"},{"name":"host","value":"fv-az654-356"},{"name":"thread","value":"2136-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.db.test_connection"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"eb009b8f2089cd9.json","parameterValues":[]}