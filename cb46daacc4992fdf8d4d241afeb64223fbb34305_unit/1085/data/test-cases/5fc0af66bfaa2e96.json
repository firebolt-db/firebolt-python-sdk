{
  "uid" : "5fc0af66bfaa2e96",
  "name" : "test_cursor_execute_error",
  "fullName" : "tests.unit.db.V2.test_cursor#test_cursor_execute_error",
  "historyId" : "49a541a2eb050d46d3f91b4a4409cbf7",
  "time" : {
    "start" : 1708627418317,
    "stop" : 1708627418344,
    "duration" : 27
  },
  "description" : "Cursor handles all types of errors properly.",
  "descriptionHtml" : "<p>Cursor handles all types of errors properly.</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'api-dev.mock.firebolt.io' in \"<ExceptionInfo EngineNotRunningError('Engine Firebolt engine api_dev needs to be running to run queries against it. is not running') tblen=6>\"\n +  where \"<ExceptionInfo EngineNotRunningError('Engine Firebolt engine api_dev needs to be running to run queries against it. is not running') tblen=6>\" = str(<ExceptionInfo EngineNotRunningError('Engine Firebolt engine api_dev needs to be running to run queries against it. is not running') tblen=6>)",
  "statusTrace" : "httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f0409a91850>\nget_engines_url = 'https://api-dev.mock.firebolt.io/core/v1/account/engines'\nserver = 'api-dev.mock.firebolt.io', db_name = 'database'\nquery_url = URL('https://api-dev.mock.firebolt.io/?output_format=JSON_Compact&database=database')\nquery_statistics = {'bytes_read': 61, 'elapsed': 0.116907717, 'rows_read': 1, 'scanned_bytes_cache': 0, ...}\ncursor = <firebolt.db.cursor.CursorV2 object at 0x7f04098efc20>\nsystem_engine_query_url = 'https://bravo.a.eu-west-1.aws.mock.firebolt.io/?output_format=JSON_Compact&database=database&account_id=mock_account_id'\n\n    def test_cursor_execute_error(\n        httpx_mock: HTTPXMock,\n        get_engines_url: str,\n        server: str,\n        db_name: str,\n        query_url: str,\n        query_statistics: Dict[str, Any],\n        cursor: Cursor,\n        system_engine_query_url: str,\n    ):\n        \"\"\"Cursor handles all types of errors properly.\"\"\"\n        for query, message in (\n            (\n                lambda: cursor.execute(\"select * from t\"),\n                \"server-side synchronous execute()\",\n            ),\n            (\n                lambda: cursor.executemany(\"select * from t\", []),\n                \"server-side synchronous executemany()\",\n            ),\n        ):\n            # Internal httpx error\n            def http_error(*args, **kwargs):\n                raise StreamError(\"httpx error\")\n    \n            httpx_mock.add_callback(http_error, url=query_url)\n            with raises(StreamError) as excinfo:\n                query()\n    \n            assert cursor._state == CursorState.ERROR\n            assert (\n                str(excinfo.value) == \"httpx error\"\n            ), f\"Invalid query error message for {message}.\"\n    \n            # HTTP error\n            httpx_mock.add_callback(\n                lambda *args, **kwargs: Response(\n                    status_code=codes.BAD_REQUEST,\n                ),\n                url=query_url,\n            )\n            with raises(HTTPStatusError) as excinfo:\n                query()\n    \n            errmsg = str(excinfo.value)\n            assert cursor._state == CursorState.ERROR\n            assert \"Bad Request\" in errmsg, f\"Invalid query error message for {message}.\"\n    \n            # Database query error\n            httpx_mock.add_callback(\n                lambda *args, **kwargs: Response(\n                    status_code=codes.INTERNAL_SERVER_ERROR,\n                    content=\"Query error message\",\n                ),\n                url=query_url,\n            )\n            with raises(OperationalError) as excinfo:\n                query()\n    \n            assert cursor._state == CursorState.ERROR\n            assert (\n                str(excinfo.value) == \"Error executing query:\\nQuery error message\"\n            ), f\"Invalid authentication error message for {message}.\"\n    \n            # Database does not exist error\n            httpx_mock.add_callback(\n                lambda *args, **kwargs: Response(\n                    status_code=codes.FORBIDDEN,\n                    content=\"Query error message\",\n                ),\n                url=query_url,\n            )\n            httpx_mock.add_response(\n                url=system_engine_query_url,\n                method=\"POST\",\n                json={\n                    \"rows\": \"0\",\n                    \"data\": [],\n                    \"meta\": [],\n                    \"statistics\": query_statistics,\n                },\n            )\n            with raises(FireboltDatabaseError) as excinfo:\n                query()\n            assert cursor._state == CursorState.ERROR\n            assert db_name in str(excinfo)\n    \n            # Database exists but some other error\n            error_message = \"My query error message\"\n            httpx_mock.add_callback(\n                lambda *args, **kwargs: Response(\n                    status_code=codes.FORBIDDEN,\n                    content=error_message,\n                ),\n                url=query_url,\n                match_content=b\"select * from t\",\n            )\n            httpx_mock.add_response(\n                url=system_engine_query_url,\n                method=\"POST\",\n                json={\n                    \"rows\": \"1\",\n                    \"data\": [\"my_db\"],\n                    \"meta\": [],\n                    \"statistics\": query_statistics,\n                },\n            )\n            with raises(ProgrammingError) as excinfo:\n                query()\n            assert cursor._state == CursorState.ERROR\n            assert error_message in str(excinfo)\n    \n            # Engine is not running error\n            httpx_mock.add_callback(\n                lambda *args, **kwargs: Response(\n                    status_code=codes.SERVICE_UNAVAILABLE,\n                    content=\"Query error message\",\n                ),\n                url=query_url,\n            )\n            httpx_mock.add_response(\n                url=system_engine_query_url,\n                method=\"POST\",\n                json={\n                    \"rows\": \"1\",\n                    \"data\": [[get_engines_url, \"my_db\", \"Stopped\"]],\n                    \"meta\": [\n                        {\"name\": \"url\", \"type\": \"text\"},\n                        {\"name\": \"attached_to\", \"type\": \"text\"},\n                        {\"name\": \"status\", \"type\": \"text\"},\n                    ],\n                    \"statistics\": query_statistics,\n                },\n            )\n            with raises(EngineNotRunningError) as excinfo:\n                query()\n            assert cursor._state == CursorState.ERROR\n>           assert server in str(excinfo)\nE           assert 'api-dev.mock.firebolt.io' in \"<ExceptionInfo EngineNotRunningError('Engine Firebolt engine api_dev needs to be running to run queries against it. is not running') tblen=6>\"\nE            +  where \"<ExceptionInfo EngineNotRunningError('Engine Firebolt engine api_dev needs to be running to run queries against it. is not running') tblen=6>\" = str(<ExceptionInfo EngineNotRunningError('Engine Firebolt engine api_dev needs to be running to run queries against it. is not running') tblen=6>)\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/db/V2/test_cursor.py:326: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "account_version_1",
    "time" : {
      "start" : 1708627418214,
      "stop" : 1708627418214,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "cursor",
    "time" : {
      "start" : 1708627418316,
      "stop" : 1708627418317,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "system_engine_url",
    "time" : {
      "start" : 1708627418213,
      "stop" : 1708627418213,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "engine_name",
    "time" : {
      "start" : 1708627418212,
      "stop" : 1708627418212,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "account_id_callback",
    "time" : {
      "start" : 1708627418214,
      "stop" : 1708627418214,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_engine_url_callback",
    "time" : {
      "start" : 1708627418214,
      "stop" : 1708627418214,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "assert_all_responses_were_requested",
    "time" : {
      "start" : 1708627418173,
      "stop" : 1708627418174,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_system_engine_callback",
    "time" : {
      "start" : 1708627418213,
      "stop" : 1708627418213,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "check_credentials_callback",
    "time" : {
      "start" : 1708627418213,
      "stop" : 1708627418213,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_server",
    "time" : {
      "start" : 1708627418212,
      "stop" : 1708627418212,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_statistics",
    "time" : {
      "start" : 1708627418175,
      "stop" : 1708627418175,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "non_mocked_hosts",
    "time" : {
      "start" : 1708627418174,
      "stop" : 1708627418174,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_engines_url",
    "time" : {
      "start" : 1708627418174,
      "stop" : 1708627418174,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "account_id_url",
    "time" : {
      "start" : 1708627418214,
      "stop" : 1708627418214,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "httpx_mock",
    "time" : {
      "start" : 1708627418174,
      "stop" : 1708627418174,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "connection",
    "time" : {
      "start" : 1708627418215,
      "stop" : 1708627418316,
      "duration" : 101
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "access_token",
    "time" : {
      "start" : 1708627418213,
      "stop" : 1708627418213,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth",
    "time" : {
      "start" : 1708627418175,
      "stop" : 1708627418212,
      "duration" : 37
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "db_name",
    "time" : {
      "start" : 1708627418174,
      "stop" : 1708627418174,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "client_secret",
    "time" : {
      "start" : 1708627418175,
      "stop" : 1708627418175,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "server",
    "time" : {
      "start" : 1708627418174,
      "stop" : 1708627418174,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "client_id",
    "time" : {
      "start" : 1708627418175,
      "stop" : 1708627418175,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "system_engine_query_url",
    "time" : {
      "start" : 1708627418214,
      "stop" : 1708627418214,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_system_engine_url",
    "time" : {
      "start" : 1708627418213,
      "stop" : 1708627418213,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "mock_connection_flow",
    "time" : {
      "start" : 1708627418214,
      "stop" : 1708627418215,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "global_fake_fs",
    "time" : {
      "start" : 1708627418171,
      "stop" : 1708627418173,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "monkeypatch",
    "time" : {
      "start" : 1708627418173,
      "stop" : 1708627418173,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "query_url",
    "time" : {
      "start" : 1708627418174,
      "stop" : 1708627418175,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "account_id",
    "time" : {
      "start" : 1708627418213,
      "stop" : 1708627418213,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "auth_url",
    "time" : {
      "start" : 1708627418212,
      "stop" : 1708627418212,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "account_name",
    "time" : {
      "start" : 1708627418212,
      "stop" : 1708627418212,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "httpx_mock::0",
    "time" : {
      "start" : 1708627418380,
      "stop" : 1708627418380,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "connection::0",
    "time" : {
      "start" : 1708627418370,
      "stop" : 1708627418370,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "global_fake_fs::0",
    "time" : {
      "start" : 1708627418382,
      "stop" : 1708627418382,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "monkeypatch::0",
    "time" : {
      "start" : 1708627418381,
      "stop" : 1708627418381,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests.unit.db.V2"
  }, {
    "name" : "suite",
    "value" : "test_cursor"
  }, {
    "name" : "host",
    "value" : "fv-az569-89"
  }, {
    "name" : "thread",
    "value" : "2277-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.unit.db.V2.test_cursor"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5fc0af66bfaa2e96.json",
  "parameterValues" : [ ]
}