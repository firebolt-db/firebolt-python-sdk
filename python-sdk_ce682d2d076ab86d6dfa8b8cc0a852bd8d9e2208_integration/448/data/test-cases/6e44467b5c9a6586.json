{"uid":"6e44467b5c9a6586","name":"test_system_engine","fullName":"tests.integration.dbapi.sync.V2.test_system_engine#test_system_engine","historyId":"f578417af3dd6c3024e98b8d432f07ad","time":{"start":1736438892935,"stop":1736438894722,"duration":1787},"description":"Connecting with engine name is handled properly.","descriptionHtml":"<p>Connecting with engine name is handled properly.</p>\n","status":"failed","statusMessage":"AssertionError: Invalid error message\nassert None\n +  where None = <built-in method search of re.Pattern object at 0x5590e880ec70>(\"- The system engine doesn't support DML statements. Run this statement on a user engine.\")\n +    where <built-in method search of re.Pattern object at 0x5590e880ec70> = re.compile(\"The object you're trying to access is not an organization-wide or account-level object.*\").search\n +    and   \"- The system engine doesn't support DML statements. Run this statement on a user engine.\" = str(FireboltStructuredError({'errors': [{'description': \"The system engine doesn't support DML statements. Run this statement on a user engine.\"}], 'query': {'query_id': '32fe1895-bd0a-44e3-954b-21c4c877401e', 'request_id': '4e725bad-361a-4547-b6bd-c96d676d2c6e'}, 'statistics': {'elapsed': 0.0}}))\n +      where FireboltStructuredError({'errors': [{'description': \"The system engine doesn't support DML statements. Run this statement on a user engine.\"}], 'query': {'query_id': '32fe1895-bd0a-44e3-954b-21c4c877401e', 'request_id': '4e725bad-361a-4547-b6bd-c96d676d2c6e'}, 'statistics': {'elapsed': 0.0}}) = <ExceptionInfo FireboltStructuredError({'errors': [{'description': \"The system engine doesn't support DML statements. Run this statem...5-bd0a-44e3-954b-21c4c877401e', 'request_id': '4e725bad-361a-4547-b6bd-c96d676d2c6e'}, 'statistics': {'elapsed': 0.0}}) tblen=6>.value","statusTrace":"connection_system_engine = <firebolt.db.connection.Connection object at 0x7f80a4afd2e0>\nall_types_query = 'select 1 as uint8, -1 as int_8, 257 as uint16, -257 as int16, 80000 as uint32, -80000 as int32, 30000000000 as uint64...232.123459999990457054844258706536\\' as decimal(38,30)) as \"decimal\", null as \"nullable\", \\'abc123\\'::bytea as \"bytea\"'\nall_types_query_description = [Column(name='uint8', type_code=<class 'int'>, display_size=None, internal_size=None, precision=None, scale=None, null...int32', type_code=<class 'int'>, display_size=None, internal_size=None, precision=None, scale=None, null_ok=None), ...]\nall_types_query_system_engine_response = [[1, -1, 257, -257, 80000, -80000, ...]]\ntimezone_name = 'Asia/Calcutta'\n\n    def test_system_engine(\n        connection_system_engine: Connection,\n        all_types_query: str,\n        all_types_query_description: List[Column],\n        all_types_query_system_engine_response: List[ColType],\n        timezone_name: str,\n    ) -> None:\n        \"\"\"Connecting with engine name is handled properly.\"\"\"\n        with connection_system_engine.cursor() as c:\n            assert c.execute(all_types_query) == 1, \"Invalid row count returned\"\n            assert c.rowcount == 1, \"Invalid rowcount value\"\n            data = c.fetchall()\n            assert len(data) == c.rowcount, \"Invalid data length\"\n            assert_deep_eq(data, all_types_query_system_engine_response, \"Invalid data\")\n            assert c.description == all_types_query_description, \"Invalid description value\"\n            assert len(data[0]) == len(c.description), \"Invalid description length\"\n            assert len(c.fetchall()) == 0, \"Redundant data returned by fetchall\"\n    \n            # Different fetch types\n            c.execute(all_types_query)\n            assert (\n                c.fetchone() == all_types_query_system_engine_response[0]\n            ), \"Invalid fetchone data\"\n            assert c.fetchone() is None, \"Redundant data returned by fetchone\"\n    \n            c.execute(all_types_query)\n            assert len(c.fetchmany(0)) == 0, \"Invalid data size returned by fetchmany\"\n            data = c.fetchmany()\n            assert len(data) == 1, \"Invalid data size returned by fetchmany\"\n            assert_deep_eq(\n                data,\n                all_types_query_system_engine_response,\n                \"Invalid data returned by fetchmany\",\n            )\n    \n            c.execute(\"show databases\")\n            c.execute(\"show tables\")\n            with raises(FireboltStructuredError) as e:\n                # Either one or another query fails if we're not on a user engine\n                c.execute('create table if not exists \"test_sync\"(id int)')\n                c.execute('insert into \"test_sync\" values (1)')\n>           assert system_error_pattern.search(str(e.value)), \"Invalid error message\"\nE           AssertionError: Invalid error message\nE           assert None\nE            +  where None = <built-in method search of re.Pattern object at 0x5590e880ec70>(\"- The system engine doesn't support DML statements. Run this statement on a user engine.\")\nE            +    where <built-in method search of re.Pattern object at 0x5590e880ec70> = re.compile(\"The object you're trying to access is not an organization-wide or account-level object.*\").search\nE            +    and   \"- The system engine doesn't support DML statements. Run this statement on a user engine.\" = str(FireboltStructuredError({'errors': [{'description': \"The system engine doesn't support DML statements. Run this statement on a user engine.\"}], 'query': {'query_id': '32fe1895-bd0a-44e3-954b-21c4c877401e', 'request_id': '4e725bad-361a-4547-b6bd-c96d676d2c6e'}, 'statistics': {'elapsed': 0.0}}))\nE            +      where FireboltStructuredError({'errors': [{'description': \"The system engine doesn't support DML statements. Run this statement on a user engine.\"}], 'query': {'query_id': '32fe1895-bd0a-44e3-954b-21c4c877401e', 'request_id': '4e725bad-361a-4547-b6bd-c96d676d2c6e'}, 'statistics': {'elapsed': 0.0}}) = <ExceptionInfo FireboltStructuredError({'errors': [{'description': \"The system engine doesn't support DML statements. Run this statem...5-bd0a-44e3-954b-21c4c877401e', 'request_id': '4e725bad-361a-4547-b6bd-c96d676d2c6e'}, 'statistics': {'elapsed': 0.0}}) tblen=6>.value\n\ntests/integration/dbapi/sync/V2/test_system_engine.py:57: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"database_name","time":{"start":1736438800997,"stop":1736438800997,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"service_secret","time":{"start":1736438800997,"stop":1736438800997,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"service_id","time":{"start":1736438800997,"stop":1736438800997,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"auth","time":{"start":1736438800997,"stop":1736438801256,"duration":259},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"account_name","time":{"start":1736438801256,"stop":1736438801256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_endpoint","time":{"start":1736438801256,"stop":1736438801257,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connection_system_engine","time":{"start":1736438892560,"stop":1736438892934,"duration":374},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"all_types_query_system_engine_response","time":{"start":1736438892934,"stop":1736438892934,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"timezone_offset_seconds","time":{"start":1736438892934,"stop":1736438892934,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"timezone_name","time":{"start":1736438892934,"stop":1736438892935,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"all_types_query_description","time":{"start":1736438892934,"stop":1736438892934,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"all_types_query","time":{"start":1736438892934,"stop":1736438892934,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"connection_system_engine::0","time":{"start":1736438894733,"stop":1736438894733,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.integration.dbapi.sync.V2"},{"name":"suite","value":"test_system_engine"},{"name":"host","value":"fv-az1377-631"},{"name":"thread","value":"2373-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.dbapi.sync.V2.test_system_engine"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"6a6dfd2470ed04bc","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/python-sdk_ce682d2d076ab86d6dfa8b8cc0a852bd8d9e2208_integration/447//#testresult/6a6dfd2470ed04bc","status":"failed","statusDetails":"AssertionError: Invalid error message\nassert None\n +  where None = <built-in method search of re.Pattern object at 0x555c62117050>(\"- The system engine doesn't support DML statements. Run this statement on a user engine.\")\n +    where <built-in method search of re.Pattern object at 0x555c62117050> = re.compile(\"The object you're trying to access is not an organization-wide or account-level object.*\").search\n +    and   \"- The system engine doesn't support DML statements. Run this statement on a user engine.\" = str(FireboltStructuredError({'errors': [{'description': \"The system engine doesn't support DML statements. Run this statement on a user engine.\"}], 'query': {'query_id': 'af2eaf23-5cbd-40e8-a1ee-b2c251ecc6ab', 'request_id': '1ce8293f-6d92-4c78-988d-2db62f34b576'}, 'statistics': {'elapsed': 0.0}}))\n +      where FireboltStructuredError({'errors': [{'description': \"The system engine doesn't support DML statements. Run this statement on a user engine.\"}], 'query': {'query_id': 'af2eaf23-5cbd-40e8-a1ee-b2c251ecc6ab', 'request_id': '1ce8293f-6d92-4c78-988d-2db62f34b576'}, 'statistics': {'elapsed': 0.0}}) = <ExceptionInfo FireboltStructuredError({'errors': [{'description': \"The system engine doesn't support DML statements. Run this statem...3-5cbd-40e8-a1ee-b2c251ecc6ab', 'request_id': '1ce8293f-6d92-4c78-988d-2db62f34b576'}, 'statistics': {'elapsed': 0.0}}) tblen=6>.value","time":{"start":1736435944173,"stop":1736435945383,"duration":1210}}]},"tags":[]},"source":"6e44467b5c9a6586.json","parameterValues":[]}