{"uid":"1ce75969dc4bfa77","name":"test_cursor_unknown_error_body_logging","fullName":"tests.unit.V1.db.test_cursor#test_cursor_unknown_error_body_logging","historyId":"9784a6f80e3f9e8356e549c03737bdb8","time":{"start":1731294598024,"stop":1731294598064,"duration":40},"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f2c6617f2e0>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f2c629e8670>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f2c628af670>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7f2c62b7dbf0>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f2c631d20d0>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f2c63ce8130>\nkey = <_pytest.stash.StashKey object at 0x7f2c6617f2e0>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f2c6617f2e0>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clear_cache","time":{"start":1731294597746,"stop":1731294597746,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1731294597747,"stop":1731294597751,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f2c6617f2e0>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f2c629e8670>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f2c628af670>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7f2c62b7dbf0>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f2c631d20d0>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f2c63ce8130>\nkey = <_pytest.stash.StashKey object at 0x7f2c6617f2e0>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f2c6617f2e0>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","steps":[],"attachments":[{"uid":"5e996e3a0710840a","name":"log","source":"5e996e3a0710840a.txt","type":"text/plain","size":87}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"global_fake_fs::0","time":{"start":1731294598122,"stop":1731294598123,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.db"},{"name":"suite","value":"test_cursor"},{"name":"host","value":"fv-az1144-542"},{"name":"thread","value":"2130-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.db.test_cursor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":68,"skipped":0,"passed":58,"unknown":0,"total":126},"items":[{"uid":"77efa32a2ec58e09","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/355//#testresult/77efa32a2ec58e09","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fc3940c42c0>","time":{"start":1731294446596,"stop":1731294446650,"duration":54}},{"uid":"dea90c95eeb8619c","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/351//#testresult/dea90c95eeb8619c","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fe730bff2a0>","time":{"start":1731208194344,"stop":1731208194372,"duration":28}},{"uid":"7bcf961774dfcfcf","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/354//#testresult/7bcf961774dfcfcf","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f1d892e02c0>","time":{"start":1731208065470,"stop":1731208065559,"duration":89}},{"uid":"d6aab12765beb93c","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/350//#testresult/d6aab12765beb93c","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f0235ebe2e0>","time":{"start":1731121939655,"stop":1731121939702,"duration":47}},{"uid":"1d94b60da9bbe5b6","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/353//#testresult/1d94b60da9bbe5b6","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fb26dca02e0>","time":{"start":1731121551073,"stop":1731121551104,"duration":31}},{"uid":"7bc07aae14b012e9","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/349//#testresult/7bc07aae14b012e9","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f78ee2ef2c0>","time":{"start":1731035307508,"stop":1731035307531,"duration":23}},{"uid":"8e35e7ad64936e70","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/352//#testresult/8e35e7ad64936e70","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fa8a3dff300>","time":{"start":1731035165866,"stop":1731035165875,"duration":9}},{"uid":"99c34cd99bc12d9f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/348//#testresult/99c34cd99bc12d9f","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f5bdffff2a0>","time":{"start":1730948991062,"stop":1730948991112,"duration":50}},{"uid":"45b3c18c9d6c8e58","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/351//#testresult/45b3c18c9d6c8e58","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fe2e097f2c0>","time":{"start":1730948862416,"stop":1730948862444,"duration":28}},{"uid":"cae2f9450d5ff78f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/347//#testresult/cae2f9450d5ff78f","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f1d437c1280>","time":{"start":1730862483099,"stop":1730862483224,"duration":125}},{"uid":"f6527f5889134f85","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/350//#testresult/f6527f5889134f85","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fb4256bf2e0>","time":{"start":1730862318250,"stop":1730862318288,"duration":38}},{"uid":"9255601820e3d2ec","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/346//#testresult/9255601820e3d2ec","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f806768d0c0>","time":{"start":1730776116572,"stop":1730776116611,"duration":39}},{"uid":"b0ab005f0e3140b5","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/349//#testresult/b0ab005f0e3140b5","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f2c34d41280>","time":{"start":1730775948689,"stop":1730775948735,"duration":46}},{"uid":"f54d0b0440ba32ea","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/345//#testresult/f54d0b0440ba32ea","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f2b8d3ff2e0>","time":{"start":1730690013514,"stop":1730690013589,"duration":75}},{"uid":"b9216a273bbbfffc","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/348//#testresult/b9216a273bbbfffc","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f574bd3e300>","time":{"start":1730689870162,"stop":1730689870216,"duration":54}},{"uid":"66d5319c9d5398cc","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/344//#testresult/66d5319c9d5398cc","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f1643b3f2a0>","time":{"start":1730603615571,"stop":1730603615652,"duration":81}},{"uid":"3cddd981a519b0af","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/347//#testresult/3cddd981a519b0af","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fba6013e2e0>","time":{"start":1730603484358,"stop":1730603484386,"duration":28}},{"uid":"62a3891345538738","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/343//#testresult/62a3891345538738","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fbe87b3f300>","time":{"start":1730516958956,"stop":1730516958990,"duration":34}},{"uid":"ac45966d28bae6d5","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/346//#testresult/ac45966d28bae6d5","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fd72c4ff2e0>","time":{"start":1730516812659,"stop":1730516812688,"duration":29}},{"uid":"95c5460e05bf7acb","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/342//#testresult/95c5460e05bf7acb","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f9230cb52c0>","time":{"start":1730431057249,"stop":1730431057295,"duration":46}}]},"tags":[]},"source":"1ce75969dc4bfa77.json","parameterValues":[]}