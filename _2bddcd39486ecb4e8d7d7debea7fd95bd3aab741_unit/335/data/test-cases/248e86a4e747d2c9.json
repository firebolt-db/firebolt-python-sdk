{"uid":"248e86a4e747d2c9","name":"test_cursor_unknown_error_body_logging","fullName":"tests.unit.V1.db.test_cursor#test_cursor_unknown_error_body_logging","historyId":"9784a6f80e3f9e8356e549c03737bdb8","time":{"start":1729825912274,"stop":1729825912381,"duration":107},"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f01243fe2e0>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f012123af70>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f0120eb8040>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7f01210ad460>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f0120eaf9a0>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f0121eea400>\nkey = <_pytest.stash.StashKey object at 0x7f01243fe2e0>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f01243fe2e0>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"global_fake_fs","time":{"start":1729825911953,"stop":1729825911958,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"clear_cache","time":{"start":1729825911953,"stop":1729825911953,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f01243fe2e0>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f012123af70>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f0120eb8040>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7f01210ad460>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f0120eaf9a0>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f0121eea400>\nkey = <_pytest.stash.StashKey object at 0x7f01243fe2e0>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f01243fe2e0>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","steps":[],"attachments":[{"uid":"e044e635b46d37ec","name":"log","source":"e044e635b46d37ec.txt","type":"text/plain","size":87}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[{"name":"global_fake_fs::0","time":{"start":1729825912442,"stop":1729825912443,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.db"},{"name":"suite","value":"test_cursor"},{"name":"host","value":"fv-az1019-33"},{"name":"thread","value":"2179-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.db.test_cursor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":34,"skipped":0,"passed":58,"unknown":0,"total":92},"items":[{"uid":"70aa1ee78264c999","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/338//#testresult/70aa1ee78264c999","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f2f95f3f2c0>","time":{"start":1729825774825,"stop":1729825774845,"duration":20}},{"uid":"89e074750452c2d8","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/334//#testresult/89e074750452c2d8","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f418cdbf300>","time":{"start":1729739409633,"stop":1729739409678,"duration":45}},{"uid":"78e11e623eab08dd","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/337//#testresult/78e11e623eab08dd","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fbeaddff300>","time":{"start":1729739261631,"stop":1729739261684,"duration":53}},{"uid":"39526409020b995f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/333//#testresult/39526409020b995f","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f5adb97f2a0>","time":{"start":1729653018907,"stop":1729653018936,"duration":29}},{"uid":"3ebd2352588eb69","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/336//#testresult/3ebd2352588eb69","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fc43febf2e0>","time":{"start":1729652876472,"stop":1729652876520,"duration":48}},{"uid":"356b2f1c61184825","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/332//#testresult/356b2f1c61184825","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f6c66a81280>","time":{"start":1729566670653,"stop":1729566670697,"duration":44}},{"uid":"6219b6d15b0c0159","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/335//#testresult/6219b6d15b0c0159","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f1f42fbf2c0>","time":{"start":1729566534613,"stop":1729566534642,"duration":29}},{"uid":"8d40649f76183066","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/331//#testresult/8d40649f76183066","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fa5c1cef320>","time":{"start":1729480382214,"stop":1729480382246,"duration":32}},{"uid":"33ae65f7f49ae5e4","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/334//#testresult/33ae65f7f49ae5e4","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f3dafcd32a0>","time":{"start":1729480252314,"stop":1729480252345,"duration":31}},{"uid":"3631cbdd5a24b8e7","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/330//#testresult/3631cbdd5a24b8e7","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f4c3678d0c0>","time":{"start":1729394026591,"stop":1729394026619,"duration":28}},{"uid":"1df7c6a83eb75565","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/333//#testresult/1df7c6a83eb75565","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f590d9ff300>","time":{"start":1729393892131,"stop":1729393892154,"duration":23}},{"uid":"88137910ee95cce0","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/329//#testresult/88137910ee95cce0","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fa14317f2e0>","time":{"start":1729307362303,"stop":1729307362327,"duration":24}},{"uid":"13865d18bf5440f4","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/332//#testresult/13865d18bf5440f4","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f2b2140e0c0>","time":{"start":1729307238415,"stop":1729307238449,"duration":34}},{"uid":"69b8b57397721c1b","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/328//#testresult/69b8b57397721c1b","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f216017f2e0>","time":{"start":1729221062645,"stop":1729221062670,"duration":25}},{"uid":"957cf9e7850223ad","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/331//#testresult/957cf9e7850223ad","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f77be08e0c0>","time":{"start":1729220917206,"stop":1729220917245,"duration":39}},{"uid":"8984ef09bbfa2d29","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/327//#testresult/8984ef09bbfa2d29","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f363ca02280>","time":{"start":1729134612891,"stop":1729134612933,"duration":42}},{"uid":"b53d9ce6d482b28b","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/330//#testresult/b53d9ce6d482b28b","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f8d72aa82c0>","time":{"start":1729134476607,"stop":1729134476630,"duration":23}},{"uid":"52951d615b1dd9d9","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/326//#testresult/52951d615b1dd9d9","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f11c453f320>","time":{"start":1729048334694,"stop":1729048334701,"duration":7}},{"uid":"277af70e03e2b2b","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/329//#testresult/277af70e03e2b2b","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fa5687ff320>","time":{"start":1729048182448,"stop":1729048182455,"duration":7}},{"uid":"edaf7d6d6f035d8f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/325//#testresult/edaf7d6d6f035d8f","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fdbbbf2f2e0>","time":{"start":1728961877728,"stop":1728961877736,"duration":8}}]},"tags":[]},"source":"248e86a4e747d2c9.json","parameterValues":[]}