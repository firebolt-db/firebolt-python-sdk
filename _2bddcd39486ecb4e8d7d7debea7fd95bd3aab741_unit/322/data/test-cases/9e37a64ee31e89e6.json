{"uid":"9e37a64ee31e89e6","name":"test_cursor_unknown_error_body_logging","fullName":"tests.unit.V1.db.test_cursor#test_cursor_unknown_error_body_logging","historyId":"9784a6f80e3f9e8356e549c03737bdb8","time":{"start":1728702466761,"stop":1728702466795,"duration":34},"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f65f25b2280>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f65eee84370>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f65eeec1f70>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7f65ef9a4460>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f65ef4d1c40>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f65f0168070>\nkey = <_pytest.stash.StashKey object at 0x7f65f25b2280>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f65f25b2280>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clear_cache","time":{"start":1728702466486,"stop":1728702466486,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1728702466487,"stop":1728702466491,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f65f25b2280>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f65eee84370>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f65eeec1f70>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7f65ef9a4460>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f65ef4d1c40>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f65f0168070>\nkey = <_pytest.stash.StashKey object at 0x7f65f25b2280>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f65f25b2280>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","steps":[],"attachments":[{"uid":"c95993a71142726e","name":"log","source":"c95993a71142726e.txt","type":"text/plain","size":87}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"global_fake_fs::0","time":{"start":1728702466853,"stop":1728702466854,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.db"},{"name":"suite","value":"test_cursor"},{"name":"host","value":"fv-az774-794"},{"name":"thread","value":"2188-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.db.test_cursor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":58,"unknown":0,"total":66},"items":[{"uid":"57ad45eceb72ae7a","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/325//#testresult/57ad45eceb72ae7a","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f06ee1ff2e0>","time":{"start":1728702346983,"stop":1728702347002,"duration":19}},{"uid":"b1f45d922d8fb68e","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/321//#testresult/b1f45d922d8fb68e","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f0e49c842e0>","time":{"start":1728616151479,"stop":1728616151529,"duration":50}},{"uid":"abda85a07692af6f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/324//#testresult/abda85a07692af6f","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f95c37bf2a0>","time":{"start":1728616014769,"stop":1728616014802,"duration":33}},{"uid":"4fff72b4d3a761a9","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/320//#testresult/4fff72b4d3a761a9","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7ffabe4bf300>","time":{"start":1728530033578,"stop":1728530033610,"duration":32}},{"uid":"afefac350ee883a0","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/323//#testresult/afefac350ee883a0","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fc16ffff2e0>","time":{"start":1728529667176,"stop":1728529667224,"duration":48}},{"uid":"52cd7dd7a707a160","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/319//#testresult/52cd7dd7a707a160","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f296d6fe2e0>","time":{"start":1728443397495,"stop":1728443397543,"duration":48}},{"uid":"3f5e953bb59a73f2","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/322//#testresult/3f5e953bb59a73f2","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f4e68c81280>","time":{"start":1728443264373,"stop":1728443264406,"duration":33}},{"uid":"ef203d2d06ddebaa","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/318//#testresult/ef203d2d06ddebaa","status":"passed","time":{"start":1728357102816,"stop":1728357102820,"duration":4}},{"uid":"f8c7079f07eff57f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/321//#testresult/f8c7079f07eff57f","status":"passed","time":{"start":1728356969741,"stop":1728356969744,"duration":3}},{"uid":"23fb90fcf0f0b7e1","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/317//#testresult/23fb90fcf0f0b7e1","status":"passed","time":{"start":1728270708846,"stop":1728270708849,"duration":3}},{"uid":"a2c702524a9406e","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/320//#testresult/a2c702524a9406e","status":"passed","time":{"start":1728270607769,"stop":1728270607772,"duration":3}},{"uid":"bd114fa596e613ac","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/316//#testresult/bd114fa596e613ac","status":"passed","time":{"start":1728184336969,"stop":1728184336972,"duration":3}},{"uid":"76a43add5f34c6a4","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/319//#testresult/76a43add5f34c6a4","status":"passed","time":{"start":1728184202609,"stop":1728184202612,"duration":3}},{"uid":"93db78355f1f9a1d","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/315//#testresult/93db78355f1f9a1d","status":"passed","time":{"start":1728097715502,"stop":1728097715506,"duration":4}},{"uid":"8242d8133d981432","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/318//#testresult/8242d8133d981432","status":"passed","time":{"start":1728097577672,"stop":1728097577675,"duration":3}},{"uid":"7a98a031d621ff4b","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/314//#testresult/7a98a031d621ff4b","status":"passed","time":{"start":1728011385152,"stop":1728011385155,"duration":3}},{"uid":"af9037e92a14727b","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/317//#testresult/af9037e92a14727b","status":"passed","time":{"start":1728011243667,"stop":1728011243670,"duration":3}},{"uid":"5b2e24a45c75dbbe","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/313//#testresult/5b2e24a45c75dbbe","status":"passed","time":{"start":1727924978904,"stop":1727924978908,"duration":4}},{"uid":"9bb8a78e137d5d19","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/316//#testresult/9bb8a78e137d5d19","status":"passed","time":{"start":1727924850130,"stop":1727924850134,"duration":4}},{"uid":"5131ef105ea91","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/312//#testresult/5131ef105ea91","status":"passed","time":{"start":1727838541331,"stop":1727838541335,"duration":4}}]},"tags":[]},"source":"9e37a64ee31e89e6.json","parameterValues":[]}