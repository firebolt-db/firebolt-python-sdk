{"uid":"95c5460e05bf7acb","name":"test_cursor_unknown_error_body_logging","fullName":"tests.unit.V1.db.test_cursor#test_cursor_unknown_error_body_logging","historyId":"9784a6f80e3f9e8356e549c03737bdb8","time":{"start":1730431057249,"stop":1730431057295,"duration":46},"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f9230cb52c0>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f922d307370>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f922d2c2430>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7f922d527a90>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f922d40f880>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f922e2a5940>\nkey = <_pytest.stash.StashKey object at 0x7f9230cb52c0>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f9230cb52c0>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clear_cache","time":{"start":1730431056974,"stop":1730431056974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1730431056974,"stop":1730431056979,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f9230cb52c0>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f922d307370>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f922d2c2430>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7f922d527a90>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f922d40f880>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f922e2a5940>\nkey = <_pytest.stash.StashKey object at 0x7f9230cb52c0>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f9230cb52c0>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","steps":[],"attachments":[{"uid":"e1110a5020175ade","name":"log","source":"e1110a5020175ade.txt","type":"text/plain","size":87}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"global_fake_fs::0","time":{"start":1730431057353,"stop":1730431057354,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.db"},{"name":"suite","value":"test_cursor"},{"name":"host","value":"fv-az885-39"},{"name":"thread","value":"2076-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.db.test_cursor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":48,"skipped":0,"passed":58,"unknown":0,"total":106},"items":[{"uid":"92fc166294018e4c","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/345//#testresult/92fc166294018e4c","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7efd68bff2c0>","time":{"start":1730430886886,"stop":1730430886894,"duration":8}},{"uid":"1f8e0e00e0aef29","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/341//#testresult/1f8e0e00e0aef29","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fe2162932c0>","time":{"start":1730344330101,"stop":1730344330138,"duration":37}},{"uid":"374b0c4c6a06eb29","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/344//#testresult/374b0c4c6a06eb29","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f2422b3f2c0>","time":{"start":1730344199331,"stop":1730344199350,"duration":19}},{"uid":"59ecc608c2ca0908","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/340//#testresult/59ecc608c2ca0908","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f3943f41280>","time":{"start":1730257883404,"stop":1730257883411,"duration":7}},{"uid":"939c2fc3f7b80010","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/343//#testresult/939c2fc3f7b80010","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7effc6dbf320>","time":{"start":1730257742001,"stop":1730257742057,"duration":56}},{"uid":"e0480d0d59d91783","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/339//#testresult/e0480d0d59d91783","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f3a1e9ff2e0>","time":{"start":1730171512585,"stop":1730171512610,"duration":25}},{"uid":"8c7df24b17822471","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/342//#testresult/8c7df24b17822471","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fee002c3280>","time":{"start":1730171374569,"stop":1730171374577,"duration":8}},{"uid":"9cbe08f541ee941d","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/338//#testresult/9cbe08f541ee941d","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f257f67f2c0>","time":{"start":1730085244813,"stop":1730085244863,"duration":50}},{"uid":"a01d286f025ed447","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/341//#testresult/a01d286f025ed447","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7ff113ccf2c0>","time":{"start":1730085091312,"stop":1730085091353,"duration":41}},{"uid":"cd4e51c7995f0d8","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/337//#testresult/cd4e51c7995f0d8","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f305cf3f340>","time":{"start":1729998794454,"stop":1729998794474,"duration":20}},{"uid":"3799a001c68339d1","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/340//#testresult/3799a001c68339d1","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fcb0a4fe2c0>","time":{"start":1729998663165,"stop":1729998663210,"duration":45}},{"uid":"69876c194b614e81","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/336//#testresult/69876c194b614e81","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f0181fff2a0>","time":{"start":1729912101376,"stop":1729912101408,"duration":32}},{"uid":"685173da082f4961","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/339//#testresult/685173da082f4961","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f61fd1ff2c0>","time":{"start":1729911960972,"stop":1729911961019,"duration":47}},{"uid":"248e86a4e747d2c9","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/335//#testresult/248e86a4e747d2c9","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f01243fe2e0>","time":{"start":1729825912274,"stop":1729825912381,"duration":107}},{"uid":"70aa1ee78264c999","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/338//#testresult/70aa1ee78264c999","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f2f95f3f2c0>","time":{"start":1729825774825,"stop":1729825774845,"duration":20}},{"uid":"89e074750452c2d8","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/334//#testresult/89e074750452c2d8","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f418cdbf300>","time":{"start":1729739409633,"stop":1729739409678,"duration":45}},{"uid":"78e11e623eab08dd","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/337//#testresult/78e11e623eab08dd","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fbeaddff300>","time":{"start":1729739261631,"stop":1729739261684,"duration":53}},{"uid":"39526409020b995f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/333//#testresult/39526409020b995f","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f5adb97f2a0>","time":{"start":1729653018907,"stop":1729653018936,"duration":29}},{"uid":"3ebd2352588eb69","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/336//#testresult/3ebd2352588eb69","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fc43febf2e0>","time":{"start":1729652876472,"stop":1729652876520,"duration":48}},{"uid":"356b2f1c61184825","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/332//#testresult/356b2f1c61184825","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f6c66a81280>","time":{"start":1729566670653,"stop":1729566670697,"duration":44}}]},"tags":[]},"source":"95c5460e05bf7acb.json","parameterValues":[]}