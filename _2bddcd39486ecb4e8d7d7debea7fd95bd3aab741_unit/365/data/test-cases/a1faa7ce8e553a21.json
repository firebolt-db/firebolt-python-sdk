{"uid":"a1faa7ce8e553a21","name":"test_cursor_unknown_error_body_logging","fullName":"tests.unit.V1.db.test_cursor#test_cursor_unknown_error_body_logging","historyId":"9784a6f80e3f9e8356e549c03737bdb8","time":{"start":1732158722471,"stop":1732158722519,"duration":48},"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f1aae8c3280>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f1aab5bf400>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f1aab913dc0>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7f1aab5169e0>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f1aab7946a0>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f1aac4d9a00>\nkey = <_pytest.stash.StashKey object at 0x7f1aae8c3280>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f1aae8c3280>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clear_cache","time":{"start":1732158722193,"stop":1732158722193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1732158722193,"stop":1732158722198,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f1aae8c3280>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f1aab5bf400>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7f1aab913dc0>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7f1aab5169e0>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f1aab7946a0>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f1aac4d9a00>\nkey = <_pytest.stash.StashKey object at 0x7f1aae8c3280>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f1aae8c3280>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","steps":[],"attachments":[{"uid":"cbbb56034623ed57","name":"log","source":"cbbb56034623ed57.txt","type":"text/plain","size":87}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"global_fake_fs::0","time":{"start":1732158722579,"stop":1732158722580,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.db"},{"name":"suite","value":"test_cursor"},{"name":"host","value":"fv-az1501-188"},{"name":"thread","value":"2097-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.db.test_cursor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":87,"skipped":0,"passed":58,"unknown":0,"total":145},"items":[{"uid":"7c3bc1caf7c9a95f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/361//#testresult/7c3bc1caf7c9a95f","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fafb00ff2c0>","time":{"start":1732072469916,"stop":1732072469983,"duration":67}},{"uid":"dd906b36545bdba5","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/364//#testresult/dd906b36545bdba5","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fb4ac3182a0>","time":{"start":1732072325364,"stop":1732072325395,"duration":31}},{"uid":"718b684ea34c6f34","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/360//#testresult/718b684ea34c6f34","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7effba1132c0>","time":{"start":1731986102160,"stop":1731986102191,"duration":31}},{"uid":"2f8566b9230c21c3","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/363//#testresult/2f8566b9230c21c3","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f444677f2c0>","time":{"start":1731985970525,"stop":1731985970587,"duration":62}},{"uid":"d74ae37769bdedc0","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/359//#testresult/d74ae37769bdedc0","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f16accff2c0>","time":{"start":1731899869721,"stop":1731899869765,"duration":44}},{"uid":"350393f67c110bd2","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/362//#testresult/350393f67c110bd2","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f79b112f2c0>","time":{"start":1731899717459,"stop":1731899717494,"duration":35}},{"uid":"282e87c7a5bbd173","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/358//#testresult/282e87c7a5bbd173","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f77133c3280>","time":{"start":1731813449809,"stop":1731813449839,"duration":30}},{"uid":"32aded1d0de59ad7","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/361//#testresult/32aded1d0de59ad7","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fdc84acb0c0>","time":{"start":1731813310520,"stop":1731813310569,"duration":49}},{"uid":"446fda66b44d978d","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/357//#testresult/446fda66b44d978d","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7efcc473f2a0>","time":{"start":1731726825626,"stop":1731726825658,"duration":32}},{"uid":"fc79d5775d6ba84f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/360//#testresult/fc79d5775d6ba84f","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f8e25ed9300>","time":{"start":1731726681863,"stop":1731726681904,"duration":41}},{"uid":"2a2522763e854427","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/356//#testresult/2a2522763e854427","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f79b133e2c0>","time":{"start":1731640504627,"stop":1731640504691,"duration":64}},{"uid":"b2b6438b51f355d0","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/359//#testresult/b2b6438b51f355d0","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fa986703280>","time":{"start":1731640369257,"stop":1731640369301,"duration":44}},{"uid":"8db072fbea4ee1f1","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/355//#testresult/8db072fbea4ee1f1","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f36296bf2a0>","time":{"start":1731553778220,"stop":1731553778251,"duration":31}},{"uid":"12fc4ee23040dc7f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/358//#testresult/12fc4ee23040dc7f","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f101e57f300>","time":{"start":1731553643870,"stop":1731553643930,"duration":60}},{"uid":"135d796fe664d394","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/354//#testresult/135d796fe664d394","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f0aae9232a0>","time":{"start":1731467343923,"stop":1731467343960,"duration":37}},{"uid":"26370c581a590dff","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/357//#testresult/26370c581a590dff","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f346efbf2a0>","time":{"start":1731467198769,"stop":1731467198803,"duration":34}},{"uid":"558cbc12309a6e4","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/353//#testresult/558cbc12309a6e4","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fd9328ef2c0>","time":{"start":1731380844516,"stop":1731380844553,"duration":37}},{"uid":"fb1bab9feb88251","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/356//#testresult/fb1bab9feb88251","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fc8819ff2a0>","time":{"start":1731380703840,"stop":1731380703871,"duration":31}},{"uid":"1ce75969dc4bfa77","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/352//#testresult/1ce75969dc4bfa77","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f2c6617f2e0>","time":{"start":1731294598024,"stop":1731294598064,"duration":40}},{"uid":"77efa32a2ec58e09","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/355//#testresult/77efa32a2ec58e09","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fc3940c42c0>","time":{"start":1731294446596,"stop":1731294446650,"duration":54}}]},"tags":[]},"source":"a1faa7ce8e553a21.json","parameterValues":[]}