{"uid":"d9e085f8f4f82ff4","name":"test_cursor_unknown_error_body_logging","fullName":"tests.unit.V1.db.test_cursor#test_cursor_unknown_error_body_logging","historyId":"9784a6f80e3f9e8356e549c03737bdb8","time":{"start":1732936500502,"stop":1732936500578,"duration":76},"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7fe546cfe300>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7fe543577be0>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7fe54377c430>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7fe5436abbf0>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7fe543851fa0>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7fe54470ee50>\nkey = <_pytest.stash.StashKey object at 0x7fe546cfe300>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7fe546cfe300>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clear_cache","time":{"start":1732936500222,"stop":1732936500222,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"global_fake_fs","time":{"start":1732936500222,"stop":1732936500228,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7fe546cfe300>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7fe543577be0>\nauth_callback = <function auth_callback.<locals>.do_mock at 0x7fe54377c430>\nauth_url = 'https://api-dev.mock.firebolt.io/auth/v1/login'\ncursor = <firebolt.db.cursor.CursorV1 object at 0x7fe5436abbf0>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7fe543851fa0>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock,\n        auth_callback: Callable,\n        auth_url: str,\n        cursor: Cursor,\n        caplog: LogCaptureFixture,\n        query_url: str,\n    ):\n        httpx_mock.add_callback(auth_callback, url=auth_url)\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/V1/db/test_cursor.py:606: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7fe54470ee50>\nkey = <_pytest.stash.StashKey object at 0x7fe546cfe300>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7fe546cfe300>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","steps":[],"attachments":[{"uid":"8404889c798546db","name":"log","source":"8404889c798546db.txt","type":"text/plain","size":87}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"global_fake_fs::0","time":{"start":1732936500639,"stop":1732936500640,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.V1.db"},{"name":"suite","value":"test_cursor"},{"name":"host","value":"fv-az1247-159"},{"name":"thread","value":"2094-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.V1.db.test_cursor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":106,"skipped":0,"passed":58,"unknown":0,"total":164},"items":[{"uid":"3a2670add1fb127a","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/374//#testresult/3a2670add1fb127a","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f054faa82a0>","time":{"start":1732936330376,"stop":1732936330412,"duration":36}},{"uid":"78233abf2f41c63b","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/370//#testresult/78233abf2f41c63b","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f69b2b03280>","time":{"start":1732850273571,"stop":1732850273640,"duration":69}},{"uid":"4d278eec74cbb0a8","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/373//#testresult/4d278eec74cbb0a8","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f9a4e344280>","time":{"start":1732850121140,"stop":1732850121219,"duration":79}},{"uid":"159b60111d7c7951","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/369//#testresult/159b60111d7c7951","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f3a5a33e2a0>","time":{"start":1732763890153,"stop":1732763890186,"duration":33}},{"uid":"cbb318637d531ae","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/372//#testresult/cbb318637d531ae","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f458353f2e0>","time":{"start":1732763745279,"stop":1732763745316,"duration":37}},{"uid":"84719f68af70fd54","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/368//#testresult/84719f68af70fd54","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f2c722a02e0>","time":{"start":1732677493707,"stop":1732677493769,"duration":62}},{"uid":"5707d74506513bd7","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/371//#testresult/5707d74506513bd7","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f4f0fc942a0>","time":{"start":1732677349542,"stop":1732677349608,"duration":66}},{"uid":"ada51dfb0bcce44d","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/367//#testresult/ada51dfb0bcce44d","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fd0d87bf2e0>","time":{"start":1732590985669,"stop":1732590985719,"duration":50}},{"uid":"bd11aac774f24d9c","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/370//#testresult/bd11aac774f24d9c","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fcb6c7bf2e0>","time":{"start":1732590839332,"stop":1732590839363,"duration":31}},{"uid":"ff30b299b841edf","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/366//#testresult/ff30b299b841edf","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f051e37f2e0>","time":{"start":1732504668247,"stop":1732504668322,"duration":75}},{"uid":"8c98cf41b4a7a2b2","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/369//#testresult/8c98cf41b4a7a2b2","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7ff5892bf2c0>","time":{"start":1732504518442,"stop":1732504518493,"duration":51}},{"uid":"e2f4d5b667365e8","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/365//#testresult/e2f4d5b667365e8","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f2221d7f2c0>","time":{"start":1732418318888,"stop":1732418318917,"duration":29}},{"uid":"72c98fbad45dd4be","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/368//#testresult/72c98fbad45dd4be","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f4f328cc2c0>","time":{"start":1732418166080,"stop":1732418166109,"duration":29}},{"uid":"5fcc2d3f62154213","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/364//#testresult/5fcc2d3f62154213","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f19d1ebf2e0>","time":{"start":1732331599811,"stop":1732331599856,"duration":45}},{"uid":"6f5b443f473231db","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/367//#testresult/6f5b443f473231db","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fcf5b77f2e0>","time":{"start":1732331456230,"stop":1732331456261,"duration":31}},{"uid":"1eea0b929ed1bb9f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/363//#testresult/1eea0b929ed1bb9f","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fdadc933280>","time":{"start":1732245313008,"stop":1732245313050,"duration":42}},{"uid":"a7b71bda364e300e","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/366//#testresult/a7b71bda364e300e","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7efc7e1bf300>","time":{"start":1732245185285,"stop":1732245185328,"duration":43}},{"uid":"5c99d38258a19a6c","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/362//#testresult/5c99d38258a19a6c","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f19bb483280>","time":{"start":1732158867619,"stop":1732158867655,"duration":36}},{"uid":"a1faa7ce8e553a21","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/365//#testresult/a1faa7ce8e553a21","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f1aae8c3280>","time":{"start":1732158722471,"stop":1732158722519,"duration":48}},{"uid":"7c3bc1caf7c9a95f","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/361//#testresult/7c3bc1caf7c9a95f","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fafb00ff2c0>","time":{"start":1732072469916,"stop":1732072469983,"duration":67}}]},"tags":[]},"source":"d9e085f8f4f82ff4.json","parameterValues":[]}