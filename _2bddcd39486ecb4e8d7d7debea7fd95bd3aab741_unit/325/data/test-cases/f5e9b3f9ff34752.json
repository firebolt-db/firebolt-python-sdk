{"uid":"f5e9b3f9ff34752","name":"test_cursor_unknown_error_body_logging","fullName":"tests.unit.db.test_cursor#test_cursor_unknown_error_body_logging","historyId":"9e9db9d6284af6f68416158c85e8fb70","time":{"start":1728702405152,"stop":1728702405155,"duration":3},"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f06ee1ff2e0>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f06ead16d30>\ncursor = <firebolt.db.cursor.CursorV2 object at 0x7f06eaa559e0>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f06eb1bc670>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock, cursor: Cursor, caplog: LogCaptureFixture, query_url: str\n    ):\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/db/test_cursor.py:591: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f06eb2e7640>\nkey = <_pytest.stash.StashKey object at 0x7f06ee1ff2e0>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f06ee1ff2e0>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"global_fake_fs","time":{"start":1728702404881,"stop":1728702404888,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_cache","time":{"start":1728702404881,"stop":1728702404881,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"KeyError: <_pytest.stash.StashKey object at 0x7f06ee1ff2e0>","statusTrace":"httpx_mock = <pytest_httpx._httpx_mock.HTTPXMock object at 0x7f06ead16d30>\ncursor = <firebolt.db.cursor.CursorV2 object at 0x7f06eaa559e0>\ncaplog = <_pytest.logging.LogCaptureFixture object at 0x7f06eb1bc670>\nquery_url = URL('https://mock_engine_name.mock.firebolt.io/?output_format=JSON_Compact&database=database')\n\n    def test_cursor_unknown_error_body_logging(\n        httpx_mock: HTTPXMock, cursor: Cursor, caplog: LogCaptureFixture, query_url: str\n    ):\n        actual_error_body = \"Your query was incorrect\"\n        httpx_mock.add_callback(\n            lambda *args, **kwargs: Response(\n                status_code=codes.NOT_IMPLEMENTED, content=actual_error_body\n            ),\n            url=query_url,\n        )\n        with raises(HTTPStatusError):\n            cursor.execute(\"select 1\")\n>       assert actual_error_body in caplog.text\n\n/home/runner/work/firebolt-python-sdk/firebolt-python-sdk/tests/unit/db/test_cursor.py:591: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:408: in text\n    return _remove_ansi_escape_sequences(self.handler.stream.getvalue())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/logging.py:388: in handler\n    return self._item.stash[caplog_handler_key]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.stash.Stash object at 0x7f06eb2e7640>\nkey = <_pytest.stash.StashKey object at 0x7f06ee1ff2e0>\n\n    def __getitem__(self, key: StashKey[T]) -> T:\n        \"\"\"Get the value for key.\n    \n        Raises ``KeyError`` if the key wasn't set before.\n        \"\"\"\n>       return cast(T, self._storage[key])\nE       KeyError: <_pytest.stash.StashKey object at 0x7f06ee1ff2e0>\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/_pytest/stash.py:80: KeyError","steps":[],"attachments":[{"uid":"33bed90c46f1763d","name":"log","source":"33bed90c46f1763d.txt","type":"text/plain","size":87}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"global_fake_fs::0","time":{"start":1728702405295,"stop":1728702405296,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.unit.db"},{"name":"suite","value":"test_cursor"},{"name":"host","value":"fv-az775-855"},{"name":"thread","value":"2108-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.unit.db.test_cursor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":58,"unknown":0,"total":65},"items":[{"uid":"a54e04cd3ee70576","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/321//#testresult/a54e04cd3ee70576","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f0e49c842e0>","time":{"start":1728616210097,"stop":1728616210100,"duration":3}},{"uid":"949df7d7943ba66c","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/324//#testresult/949df7d7943ba66c","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f95c37bf2a0>","time":{"start":1728616072149,"stop":1728616072152,"duration":3}},{"uid":"12350abbfc13b323","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/320//#testresult/12350abbfc13b323","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7ffabe4bf300>","time":{"start":1728530091120,"stop":1728530091123,"duration":3}},{"uid":"e1083e73821efa5d","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/323//#testresult/e1083e73821efa5d","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7fc16ffff2e0>","time":{"start":1728529724670,"stop":1728529724673,"duration":3}},{"uid":"b8caf43c74a568ab","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/319//#testresult/b8caf43c74a568ab","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f296d6fe2e0>","time":{"start":1728443454313,"stop":1728443454315,"duration":2}},{"uid":"66eee237d1bb6604","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/322//#testresult/66eee237d1bb6604","status":"broken","statusDetails":"KeyError: <_pytest.stash.StashKey object at 0x7f4e68c81280>","time":{"start":1728443322452,"stop":1728443322454,"duration":2}},{"uid":"f0ca29c5db012f1","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/318//#testresult/f0ca29c5db012f1","status":"passed","time":{"start":1728357117938,"stop":1728357117940,"duration":2}},{"uid":"46bfac7e9e49ee8b","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/321//#testresult/46bfac7e9e49ee8b","status":"passed","time":{"start":1728356984615,"stop":1728356984618,"duration":3}},{"uid":"2f690b920f6ee9bd","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/317//#testresult/2f690b920f6ee9bd","status":"passed","time":{"start":1728270723701,"stop":1728270723703,"duration":2}},{"uid":"ee52fb651e2af307","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/320//#testresult/ee52fb651e2af307","status":"passed","time":{"start":1728270622581,"stop":1728270622583,"duration":2}},{"uid":"2bcf5972bc926b28","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/316//#testresult/2bcf5972bc926b28","status":"passed","time":{"start":1728184351734,"stop":1728184351736,"duration":2}},{"uid":"93e813833a1ef1ae","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/319//#testresult/93e813833a1ef1ae","status":"passed","time":{"start":1728184217346,"stop":1728184217348,"duration":2}},{"uid":"913d8e084617eac5","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/315//#testresult/913d8e084617eac5","status":"passed","time":{"start":1728097730412,"stop":1728097730415,"duration":3}},{"uid":"4b5937a39a81092a","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/318//#testresult/4b5937a39a81092a","status":"passed","time":{"start":1728097592714,"stop":1728097592717,"duration":3}},{"uid":"7e249b824b3ea12","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/314//#testresult/7e249b824b3ea12","status":"passed","time":{"start":1728011399898,"stop":1728011399900,"duration":2}},{"uid":"c058836a84f68dae","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/317//#testresult/c058836a84f68dae","status":"passed","time":{"start":1728011259482,"stop":1728011259484,"duration":2}},{"uid":"7f1f7feb5f6d97b0","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/313//#testresult/7f1f7feb5f6d97b0","status":"passed","time":{"start":1727924994627,"stop":1727924994630,"duration":3}},{"uid":"660a3b732ac9b0e7","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/316//#testresult/660a3b732ac9b0e7","status":"passed","time":{"start":1727924865065,"stop":1727924865067,"duration":2}},{"uid":"2b8dea59b7f623e6","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/312//#testresult/2b8dea59b7f623e6","status":"passed","time":{"start":1727838556299,"stop":1727838556302,"duration":3}},{"uid":"1f9ce261441653c4","reportUrl":"https://firebolt-db.github.io/firebolt-python-sdk/_2bddcd39486ecb4e8d7d7debea7fd95bd3aab741_unit/315//#testresult/1f9ce261441653c4","status":"passed","time":{"start":1727838421089,"stop":1727838421091,"duration":2}}]},"tags":[]},"source":"f5e9b3f9ff34752.json","parameterValues":[]}